{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap bd06a3faa58cf001c1c7","webpack:///./src/statistical.js","webpack:///./src/utils/interceptor.js","webpack:///./src/utils/cacheManager.js","webpack:///./src/statistical.base.js","webpack:///./src/utils/validator.js","webpack:///./src/probability/epsilon.js","webpack:///./src/statistical.test.js","webpack:///./src/probability/chiSquaredTable.js","webpack:///./src/statistical.distribution.js"],"names":["interceptor","require","cacheManager","StatisticalBase","StatisticalTest","StatisticalDistribution","Statistical","_settings","cache","enabled","rootElementCount","subElementCount","_base","cacheBefore","_test","_distribution","options","Error","isNaN","settings","module","exports","Interceptor","object","Proxy","get","target","propKey","res","find","result","update","dataSet","Reflect","CacheManager","_cache","method","Object","keys","length","splice","push","date","Date","getTime","some","v","validator","epsilon","_validator","_epsilon","validate","sort","a","b","reduce","accumulator","current","middle","Math","floor","isEven","counter","mode","max","map","value","index","sum","avg","mean","n","pow","sqrt","variance","ceil","i","Array","from","k","min","median","stdDeviation","quantile","Validator","parameterName","rules","r","isArray","hasOnlyNumbers","includes","chiSquaredTable","_chiSquaredProbTable","distributionType","significance","observedFrequencies","val","undefined","filter","dataSetMean","hypothesizedDistribution","expectedFrequencies","entries","reduceRight","previous","chiSquared","c","degreesOfFreedom","factorialResult","trials","probability","x","cumulativeProbability","cells","factorial","p","binomial","lambda","E"],"mappings":"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","file":"statistical.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"statistical\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"statistical\"] = factory();\n\telse\n\t\troot[\"statistical\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bd06a3faa58cf001c1c7\n **/","'use strict';\n\nconst interceptor = require('./utils/interceptor');\nconst cacheManager = require('./utils/cacheManager');\nconst StatisticalBase = require('./statistical.base');\nconst StatisticalTest = require('./statistical.test');\nconst StatisticalDistribution = require('./statistical.distribution');\n\nclass Statistical {\n    constructor() {\n        this._settings = {\n            cache: {\n                enabled: true,\n                rootElementCount: 10,\n                subElementCount: 30\n            }\n        };\n        this._base = interceptor.cacheBefore(new StatisticalBase(), cacheManager);\n        this._test = interceptor.cacheBefore(new StatisticalTest(), cacheManager);\n        this._distribution = interceptor.cacheBefore(new StatisticalDistribution(), cacheManager);\n    }\n\n    /**\n     * Return _base object to provide basic statistics methods\n     *\n     * @returns {*}\n     */\n    get base() {\n        return this._base;\n    }\n\n    /**\n     * Return _distribution object to provide distribution statistics methods\n     *\n     * @returns {*}\n     */\n    get distribution() {\n        return this._distribution;\n    }\n\n    /**\n     * Return _test object to provide test statistics methods\n     *\n     * @returns {*}\n     */\n    get test() {\n        return this._test;\n    }\n\n    /**\n     * Return settings used in statistical class.\n     *\n     * @returns {*}\n     */\n    get settings() {\n        return this._settings;\n    }\n\n    /**\n     * Allow to updates statistical settings.\n     *\n     * @param {*|object} options\n     */\n    set settings(options) {\n        if (!options && !options.cache) throw new Error('Missing parameter options (Statistical:settings');\n        if (isNaN(options.cache.rootElementCount)) throw new Error('rootElementCount must be a number (Statistical:settings');\n        if (isNaN(options.cache.subElementCount)) throw new Error('subElementCount must be a number (Statistical:settings');\n\n        this._settings = {\n            cache: {\n                enabled: options.cache.enabled,\n                rootElementCount: options.cache.rootElementCount || 10,\n                subElementCount: options.cache.subElementCount || 30\n            }\n        };\n        cacheManager.settings = this._settings.cache;\n    }\n}\n\nmodule.exports = new Statistical();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.js\n **/","'use strict';\n\nclass Interceptor {\n    constructor() {}\n\n    /**\n     * Create a proxy to wrap a class method and intercept each call.\n     *\n     * @param {object} object\n     * @param {object} cacheManager\n     */\n    cacheBefore(object, cacheManager) {\n        return new Proxy(object, {\n            get: (target, propKey) => {\n                if (propKey in target) {\n                    return (...args) => {\n                        let res;\n                        if (cacheManager.settings.enabled) {\n                            const cache = cacheManager.find(propKey, args[0]);\n                            if (cache) return cache.result;\n\n                            res = target[propKey](...args);\n                            cacheManager.update(propKey, {dataSet: args[0], result: res});\n                        } else {\n                            res = target[propKey](...args);\n                        }\n\n                        return res;\n                    };\n                } else {\n                    return Reflect.get(target, propKey);\n                }\n            }\n        });\n    }\n}\n\nmodule.exports = new Interceptor();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/interceptor.js\n **/","'use strict';\n\nclass CacheManager {\n    constructor() {\n        this._cache = {};\n        this._settings = {\n            enabled: true,\n            rootElementCount: 10,\n            subElementCount: 30\n        };\n    }\n\n    /**\n     * Return CacheManager settings\n     *\n     * @returns {{maxLength: number}|*}\n     */\n    get settings() {\n        return this._settings;\n    }\n\n    /**\n     * Return the entire cache\n     *\n     * @returns {{}|*}\n     */\n    get cache() {\n        return this._cache;\n    }\n\n    /**\n     * Update existing settings to manage cache\n     *\n     * @param {*} options\n     */\n    set settings(options) {\n        if (!options) throw new Error('Missing parameter options (CacheManager:settings');\n        this._settings = {\n            enabled: options.enabled,\n            rootElementCount: options.rootElementCount || 10,\n            subElementCount: options.subElementCount || 30\n        };\n    }\n\n    /**\n     * Update the cache saved with new results\n     *\n     * @param method\n     * @param {Object} options\n     */\n    update(method, options) {\n        if (Object.keys(this._cache).length >= this._settings.rootElementCount) delete this._cache[Object.keys(this._cache)[0]];\n        if (this._cache[method] && this._cache[method].length >= this._settings.subElementCount) this._cache[method].splice(0, 1);\n\n        this._cache[method] = this._cache[method] || [];\n        this._cache[method].push({\n            date: new Date().getTime(),\n            dataSet: options.dataSet,\n            result: options.result\n        });\n    }\n\n    /**\n     * Find an existing dataSet in the cache and return it\n     *\n     * @param {String} method\n     * @param {Array} dataSet\n     * @returns {Object}\n     */\n    find(method, dataSet) {\n        const cache = this._cache[method] || [];\n\n        let res = null;\n        cache.some(v => {\n            if (v.dataSet === dataSet) {\n                res = v;\n                return true;\n            }\n\n            return false;\n        });\n\n        return res;\n    }\n}\n\nmodule.exports = new CacheManager();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/cacheManager.js\n **/","'use strict';\n\nconst validator = require('./utils/validator');\nconst epsilon = require('./probability/epsilon');\n\nclass StatisticalBase {\n    constructor() {\n        this._validator = validator;\n        this._epsilon = epsilon;\n    }\n\n    /**\n     * Return the smallest value of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    min(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return dataSet.sort((a, b) => a - b)[0];\n    }\n\n    /**\n     * Return the biggest value of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    max(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return dataSet.sort((a, b) => a + b)[0];\n    }\n\n\n    /**\n     * Take array and return sum of each elements.\n     *\n     * @param dataSet\n     * @returns {*}\n     */\n    sum(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return dataSet.reduce((accumulator, current) => accumulator + current, 0);\n    }\n\n    /**\n     * Compute median for dataSet, the central value.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    median(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        const middle = Math.floor(dataSet.length / 2);\n        const isEven = dataSet.length % 2 === 0;\n\n        dataSet = dataSet.sort((a, b) => a - b);\n\n        return isEven ? (dataSet[middle - 1] + dataSet[middle]) / 2 : dataSet[middle];\n    }\n\n    /**\n     * Get the value wit the miximum occurence.\n     *\n     * @param {Array} dataSet\n     * @returns {*}\n     */\n    mode(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        const counter = {};\n        let mode = [];\n        let max = 0;\n\n        dataSet.map((value, index) => {\n            if (!(dataSet[index] in counter)) counter[dataSet[index]] = 0;\n\n            counter[dataSet[index]]++;\n\n            if (counter[dataSet[index]] === max) mode.push(dataSet[index]);\n            if (counter[dataSet[index]] > max) {\n                max = counter[dataSet[index]];\n                mode = [dataSet[index]];\n            }\n        });\n\n        return mode.length > 1 ? mode : mode[0];\n    }\n\n    /**\n     * Compute mean for dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    mean(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        return this.sum(dataSet) / dataSet.length;\n    }\n\n    /**\n     * Compute variance for dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    variance(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        const avg = this.mean(dataSet);\n        const n = dataSet.length;\n\n        return this.sum(dataSet.map(value => Math.pow(value - avg, 2))) / n;\n    }\n\n    /**\n     * Compute standard deviation for dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    stdDeviation(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return Math.sqrt(this.variance(dataSet));\n    }\n\n    /**\n     * Provided the quantile asked by the index given, if no index given, return all quantile of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @param {number} index\n     * @returns {Array}\n     */\n    quantile(dataSet, index = null) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        dataSet = dataSet.sort((a, b) => a - b);\n        return !index ?\n            [1, 2, 3, 4].map(i => dataSet[Math.ceil((dataSet.length * (i / 4))) - 1]) :\n            dataSet[Math.ceil((dataSet.length * (index / 4)) - 1)];\n    }\n\n    /**\n     * Provided the percentile asked by the index given, if no index given, return all percentile of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @param {number} index\n     * @returns {Array}\n     */\n    percentile(dataSet, index = null) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        dataSet = dataSet.sort((a, b) => a - b);\n        return !index ? Array.from({length: 99}, (v, k) => k + 1).map(i => dataSet[i]) : dataSet[Math.ceil((index / 100) * dataSet.length)];\n    }\n\n    /**\n     * Return the entire result of descriptives statistics above\n     *\n     * @param {Array} dataSet\n     * @returns {{min: number, max: number, sum: *, median: number, mode: *, mean: number, variance: number, stdDeviation: number, quantile: Array}}\n     */\n    summary(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        return {\n            min: this.min(dataSet),\n            max: this.max(dataSet),\n            sum: this.sum(dataSet),\n            median: this.median(dataSet),\n            mode: this.mode(dataSet),\n            mean: this.mean(dataSet),\n            variance: this.variance(dataSet),\n            stdDeviation: this.stdDeviation(dataSet),\n            quantile: this.quantile(dataSet)\n        };\n    }\n}\n\nmodule.exports = StatisticalBase;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.base.js\n **/","'use strict';\n\nclass Validator {\n    constructor() {}\n\n    /**\n     * Valid a value with rules given, if the rules are not respected throw an error.\n     *\n     * @param {string} parameterName\n     * @param {*} value\n     * @param {Array} ruless\n     */\n    validate(parameterName, value, rules) {\n        rules.map(r => {\n            switch (r) {\n                case 'isArray':\n                    if (!Array.isArray(value)) throw new Error(`Parameter ${parameterName} must be an array`);\n                    break;\n                case 'isNumber':\n                    if (typeof value !== 'number') throw new Error(`Parameter ${parameterName} must be a number`);\n                    break;\n                case 'isString':\n                    if (typeof value !== 'string') throw new Error(`Parameter ${parameterName} must be a string`);\n                    break;\n                case 'isFunction':\n                    if (typeof value !== 'function') throw new Error(`Parameter ${parameterName} must be a function`);\n                    break;\n                case 'length > 0':\n                    if (value.length === 0) throw new Error(`Parameter ${parameterName} must have more than 0 values`);\n                    break;\n                case 'positive':\n                    if (value < 0) throw new Error(`Parameter ${parameterName} must be positive`);\n                    break;\n                case 'strictlyPositive':\n                    if (value <= 0) throw new Error(`Parameter ${parameterName} must be strictly positive`);\n                    break;\n                default:\n                    if (Array.isArray(r)) {\n                        const hasOnlyNumbers = !(r.map(v => !isNaN(v)).includes(false));\n                        if (hasOnlyNumbers) {\n                            if (r.length === 2) {\n                                if (value < r[0] || value > r[1]) throw new Error(`Parameter ${parameterName} must fall between ${r[0]} and ${r[1]}`);\n                            }\n                        }\n                    } else {\n                        throw new Error('Method not implemented : ' + r);\n                    }\n            }\n        });\n    }\n}\n\nmodule.exports = new Validator();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/validator.js\n **/","/**\n * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n * until we're \"close enough\". Epsilon is a very small number: for\n * simple statistics, that number is **0.0001**\n *\n * This is used in calculations like the binomialDistribution, in which\n * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n * it progresses until it is close enough.\n *\n * @type {number}\n */\nconst epsilon = 0.0001;\n\nmodule.exports = epsilon;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/probability/epsilon.js\n **/","'use strict';\n\nconst validator = require('./utils/validator');\nconst chiSquaredTable = require('./probability/chiSquaredTable');\nconst StatisticalBase = require('./statistical.base');\n\nclass StatisticalTest {\n    constructor() {\n        this._validator = validator;\n        this._chiSquaredProbTable = chiSquaredTable;\n        this._base = new StatisticalBase();\n    }\n\n    /**\n     * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test)\n     * return if data follow a specified distribution\n     *\n     * @param {Array} dataSet\n     * @param {Function} distributionType\n     * @param {number} significance\n     * @returns {boolean}\n     *\n     * @exemple\n     * chiSquaredGoodnessOfFit(dataSet, 'poisson', 0.05)); //= false\n     */\n    chiSquaredGoodnessOfFit(dataSet, distributionType, significance) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        this._validator.validate('distributionType', distributionType, ['isFunction']);\n        this._validator.validate('significance', significance, ['isNumber', 'positive']);\n\n        /* Generate an array with number of ocurences for each data in dataSet. */\n        let observedFrequencies = [];\n        observedFrequencies = dataSet.reduce((accumulator, val) => {\n            if (accumulator[val] === undefined) accumulator[val] = 0;\n            accumulator[val] += 1;\n            return accumulator;\n        }, []).filter(v => v !== undefined);\n\n        /* Number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test. */\n        /* Lose one degree of freedom for estimating `lambda` from the sample data. */\n        const dataSetMean = this._base.mean(dataSet);\n\n        /* The hypothesized distribution. Generate the hypothesized distribution. */\n        const hypothesizedDistribution = distributionType(dataSetMean);\n\n        /* Create an array holding a histogram of expected data given the */\n        /* sample size and hypothesized distribution. */\n        let expectedFrequencies = [];\n        expectedFrequencies = Object.entries(hypothesizedDistribution).reduce((accumulator, current, i) => {\n            if (observedFrequencies[i]) accumulator[i] = current[1] * dataSet.length;\n            return accumulator;\n        }, []);\n\n        /* Concat frequencies < 3 with the previous one */\n        expectedFrequencies = Object.entries(expectedFrequencies).reduceRight((previous, current) => {\n            if (previous[1] < 3) current[1] += previous[1];\n            return current;\n        });\n\n        /* Compute chiSquared value */\n        let chiSquared = 0;\n        chiSquared = Object.entries(observedFrequencies).reduce((accumulator, current, i) => {\n            accumulator += Math.pow((current[1] - expectedFrequencies[i]), 2) / expectedFrequencies[i];\n            return accumulator;\n        }, chiSquared);\n\n        const c = 1;\n        const degreesOfFreedom = Object.keys(observedFrequencies).length - c - 1;\n\n        return this._chiSquaredProbTable[degreesOfFreedom][significance] < chiSquared;\n    }\n}\n\nmodule.exports = StatisticalTest;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.test.js\n **/","'use strict';\n\n/**\n * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution)\n *\n * @type {*}\n */\nconst chiSquaredTable = {\n    '1': {\n        '0.995': 0,\n        '0.99': 0,\n        '0.975': 0,\n        '0.95': 0,\n        '0.9': 0.02,\n        '0.5': 0.45,\n        '0.1': 2.71,\n        '0.05': 3.84,\n        '0.025': 5.02,\n        '0.01': 6.63,\n        '0.005': 7.88\n    },\n    '2': {\n        '0.995': 0.01,\n        '0.99': 0.02,\n        '0.975': 0.05,\n        '0.95': 0.1,\n        '0.9': 0.21,\n        '0.5': 1.39,\n        '0.1': 4.61,\n        '0.05': 5.99,\n        '0.025': 7.38,\n        '0.01': 9.21,\n        '0.005': 10.6\n    },\n    '3': {\n        '0.995': 0.07,\n        '0.99': 0.11,\n        '0.975': 0.22,\n        '0.95': 0.35,\n        '0.9': 0.58,\n        '0.5': 2.37,\n        '0.1': 6.25,\n        '0.05': 7.81,\n        '0.025': 9.35,\n        '0.01': 11.34,\n        '0.005': 12.84\n    },\n    '4': {\n        '0.995': 0.21,\n        '0.99': 0.3,\n        '0.975': 0.48,\n        '0.95': 0.71,\n        '0.9': 1.06,\n        '0.5': 3.36,\n        '0.1': 7.78,\n        '0.05': 9.49,\n        '0.025': 11.14,\n        '0.01': 13.28,\n        '0.005': 14.86\n    },\n    '5': {\n        '0.995': 0.41,\n        '0.99': 0.55,\n        '0.975': 0.83,\n        '0.95': 1.15,\n        '0.9': 1.61,\n        '0.5': 4.35,\n        '0.1': 9.24,\n        '0.05': 11.07,\n        '0.025': 12.83,\n        '0.01': 15.09,\n        '0.005': 16.75\n    },\n    '6': {\n        '0.995': 0.68,\n        '0.99': 0.87,\n        '0.975': 1.24,\n        '0.95': 1.64,\n        '0.9': 2.2,\n        '0.5': 5.35,\n        '0.1': 10.65,\n        '0.05': 12.59,\n        '0.025': 14.45,\n        '0.01': 16.81,\n        '0.005': 18.55\n    },\n    '7': {\n        '0.995': 0.99,\n        '0.99': 1.25,\n        '0.975': 1.69,\n        '0.95': 2.17,\n        '0.9': 2.83,\n        '0.5': 6.35,\n        '0.1': 12.02,\n        '0.05': 14.07,\n        '0.025': 16.01,\n        '0.01': 18.48,\n        '0.005': 20.28\n    },\n    '8': {\n        '0.995': 1.34,\n        '0.99': 1.65,\n        '0.975': 2.18,\n        '0.95': 2.73,\n        '0.9': 3.49,\n        '0.5': 7.34,\n        '0.1': 13.36,\n        '0.05': 15.51,\n        '0.025': 17.53,\n        '0.01': 20.09,\n        '0.005': 21.96\n    },\n    '9': {\n        '0.995': 1.73,\n        '0.99': 2.09,\n        '0.975': 2.7,\n        '0.95': 3.33,\n        '0.9': 4.17,\n        '0.5': 8.34,\n        '0.1': 14.68,\n        '0.05': 16.92,\n        '0.025': 19.02,\n        '0.01': 21.67,\n        '0.005': 23.59\n    },\n    '10': {\n        '0.995': 2.16,\n        '0.99': 2.56,\n        '0.975': 3.25,\n        '0.95': 3.94,\n        '0.9': 4.87,\n        '0.5': 9.34,\n        '0.1': 15.99,\n        '0.05': 18.31,\n        '0.025': 20.48,\n        '0.01': 23.21,\n        '0.005': 25.19\n    },\n    '11': {\n        '0.995': 2.6,\n        '0.99': 3.05,\n        '0.975': 3.82,\n        '0.95': 4.57,\n        '0.9': 5.58,\n        '0.5': 10.34,\n        '0.1': 17.28,\n        '0.05': 19.68,\n        '0.025': 21.92,\n        '0.01': 24.72,\n        '0.005': 26.76\n    },\n    '12': {\n        '0.995': 3.07,\n        '0.99': 3.57,\n        '0.975': 4.4,\n        '0.95': 5.23,\n        '0.9': 6.3,\n        '0.5': 11.34,\n        '0.1': 18.55,\n        '0.05': 21.03,\n        '0.025': 23.34,\n        '0.01': 26.22,\n        '0.005': 28.3\n    },\n    '13': {\n        '0.995': 3.57,\n        '0.99': 4.11,\n        '0.975': 5.01,\n        '0.95': 5.89,\n        '0.9': 7.04,\n        '0.5': 12.34,\n        '0.1': 19.81,\n        '0.05': 22.36,\n        '0.025': 24.74,\n        '0.01': 27.69,\n        '0.005': 29.82\n    },\n    '14': {\n        '0.995': 4.07,\n        '0.99': 4.66,\n        '0.975': 5.63,\n        '0.95': 6.57,\n        '0.9': 7.79,\n        '0.5': 13.34,\n        '0.1': 21.06,\n        '0.05': 23.68,\n        '0.025': 26.12,\n        '0.01': 29.14,\n        '0.005': 31.32\n    },\n    '15': {\n        '0.995': 4.6,\n        '0.99': 5.23,\n        '0.975': 6.27,\n        '0.95': 7.26,\n        '0.9': 8.55,\n        '0.5': 14.34,\n        '0.1': 22.31,\n        '0.05': 25,\n        '0.025': 27.49,\n        '0.01': 30.58,\n        '0.005': 32.8\n    },\n    '16': {\n        '0.995': 5.14,\n        '0.99': 5.81,\n        '0.975': 6.91,\n        '0.95': 7.96,\n        '0.9': 9.31,\n        '0.5': 15.34,\n        '0.1': 23.54,\n        '0.05': 26.3,\n        '0.025': 28.85,\n        '0.01': 32,\n        '0.005': 34.27\n    },\n    '17': {\n        '0.995': 5.7,\n        '0.99': 6.41,\n        '0.975': 7.56,\n        '0.95': 8.67,\n        '0.9': 10.09,\n        '0.5': 16.34,\n        '0.1': 24.77,\n        '0.05': 27.59,\n        '0.025': 30.19,\n        '0.01': 33.41,\n        '0.005': 35.72\n    },\n    '18': {\n        '0.995': 6.26,\n        '0.99': 7.01,\n        '0.975': 8.23,\n        '0.95': 9.39,\n        '0.9': 10.87,\n        '0.5': 17.34,\n        '0.1': 25.99,\n        '0.05': 28.87,\n        '0.025': 31.53,\n        '0.01': 34.81,\n        '0.005': 37.16\n    },\n    '19': {\n        '0.995': 6.84,\n        '0.99': 7.63,\n        '0.975': 8.91,\n        '0.95': 10.12,\n        '0.9': 11.65,\n        '0.5': 18.34,\n        '0.1': 27.2,\n        '0.05': 30.14,\n        '0.025': 32.85,\n        '0.01': 36.19,\n        '0.005': 38.58\n    },\n    '20': {\n        '0.995': 7.43,\n        '0.99': 8.26,\n        '0.975': 9.59,\n        '0.95': 10.85,\n        '0.9': 12.44,\n        '0.5': 19.34,\n        '0.1': 28.41,\n        '0.05': 31.41,\n        '0.025': 34.17,\n        '0.01': 37.57,\n        '0.005': 40\n    },\n    '21': {\n        '0.995': 8.03,\n        '0.99': 8.9,\n        '0.975': 10.28,\n        '0.95': 11.59,\n        '0.9': 13.24,\n        '0.5': 20.34,\n        '0.1': 29.62,\n        '0.05': 32.67,\n        '0.025': 35.48,\n        '0.01': 38.93,\n        '0.005': 41.4\n    },\n    '22': {\n        '0.995': 8.64,\n        '0.99': 9.54,\n        '0.975': 10.98,\n        '0.95': 12.34,\n        '0.9': 14.04,\n        '0.5': 21.34,\n        '0.1': 30.81,\n        '0.05': 33.92,\n        '0.025': 36.78,\n        '0.01': 40.29,\n        '0.005': 42.8\n    },\n    '23': {\n        '0.995': 9.26,\n        '0.99': 10.2,\n        '0.975': 11.69,\n        '0.95': 13.09,\n        '0.9': 14.85,\n        '0.5': 22.34,\n        '0.1': 32.01,\n        '0.05': 35.17,\n        '0.025': 38.08,\n        '0.01': 41.64,\n        '0.005': 44.18\n    },\n    '24': {\n        '0.995': 9.89,\n        '0.99': 10.86,\n        '0.975': 12.4,\n        '0.95': 13.85,\n        '0.9': 15.66,\n        '0.5': 23.34,\n        '0.1': 33.2,\n        '0.05': 36.42,\n        '0.025': 39.36,\n        '0.01': 42.98,\n        '0.005': 45.56\n    },\n    '25': {\n        '0.995': 10.52,\n        '0.99': 11.52,\n        '0.975': 13.12,\n        '0.95': 14.61,\n        '0.9': 16.47,\n        '0.5': 24.34,\n        '0.1': 34.28,\n        '0.05': 37.65,\n        '0.025': 40.65,\n        '0.01': 44.31,\n        '0.005': 46.93\n    },\n    '26': {\n        '0.995': 11.16,\n        '0.99': 12.2,\n        '0.975': 13.84,\n        '0.95': 15.38,\n        '0.9': 17.29,\n        '0.5': 25.34,\n        '0.1': 35.56,\n        '0.05': 38.89,\n        '0.025': 41.92,\n        '0.01': 45.64,\n        '0.005': 48.29\n    },\n    '27': {\n        '0.995': 11.81,\n        '0.99': 12.88,\n        '0.975': 14.57,\n        '0.95': 16.15,\n        '0.9': 18.11,\n        '0.5': 26.34,\n        '0.1': 36.74,\n        '0.05': 40.11,\n        '0.025': 43.19,\n        '0.01': 46.96,\n        '0.005': 49.65\n    },\n    '28': {\n        '0.995': 12.46,\n        '0.99': 13.57,\n        '0.975': 15.31,\n        '0.95': 16.93,\n        '0.9': 18.94,\n        '0.5': 27.34,\n        '0.1': 37.92,\n        '0.05': 41.34,\n        '0.025': 44.46,\n        '0.01': 48.28,\n        '0.005': 50.99\n    },\n    '29': {\n        '0.995': 13.12,\n        '0.99': 14.26,\n        '0.975': 16.05,\n        '0.95': 17.71,\n        '0.9': 19.77,\n        '0.5': 28.34,\n        '0.1': 39.09,\n        '0.05': 42.56,\n        '0.025': 45.72,\n        '0.01': 49.59,\n        '0.005': 52.34\n    },\n    '30': {\n        '0.995': 13.79,\n        '0.99': 14.95,\n        '0.975': 16.79,\n        '0.95': 18.49,\n        '0.9': 20.6,\n        '0.5': 29.34,\n        '0.1': 40.26,\n        '0.05': 43.77,\n        '0.025': 46.98,\n        '0.01': 50.89,\n        '0.005': 53.67\n    },\n    '40': {\n        '0.995': 20.71,\n        '0.99': 22.16,\n        '0.975': 24.43,\n        '0.95': 26.51,\n        '0.9': 29.05,\n        '0.5': 39.34,\n        '0.1': 51.81,\n        '0.05': 55.76,\n        '0.025': 59.34,\n        '0.01': 63.69,\n        '0.005': 66.77\n    },\n    '50': {\n        '0.995': 27.99,\n        '0.99': 29.71,\n        '0.975': 32.36,\n        '0.95': 34.76,\n        '0.9': 37.69,\n        '0.5': 49.33,\n        '0.1': 63.17,\n        '0.05': 67.5,\n        '0.025': 71.42,\n        '0.01': 76.15,\n        '0.005': 79.49\n    },\n    '60': {\n        '0.995': 35.53,\n        '0.99': 37.48,\n        '0.975': 40.48,\n        '0.95': 43.19,\n        '0.9': 46.46,\n        '0.5': 59.33,\n        '0.1': 74.4,\n        '0.05': 79.08,\n        '0.025': 83.3,\n        '0.01': 88.38,\n        '0.005': 91.95\n    },\n    '70': {\n        '0.995': 43.28,\n        '0.99': 45.44,\n        '0.975': 48.76,\n        '0.95': 51.74,\n        '0.9': 55.33,\n        '0.5': 69.33,\n        '0.1': 85.53,\n        '0.05': 90.53,\n        '0.025': 95.02,\n        '0.01': 100.42,\n        '0.005': 104.22\n    },\n    '80': {\n        '0.995': 51.17,\n        '0.99': 53.54,\n        '0.975': 57.15,\n        '0.95': 60.39,\n        '0.9': 64.28,\n        '0.5': 79.33,\n        '0.1': 96.58,\n        '0.05': 101.88,\n        '0.025': 106.63,\n        '0.01': 112.33,\n        '0.005': 116.32\n    },\n    '90': {\n        '0.995': 59.2,\n        '0.99': 61.75,\n        '0.975': 65.65,\n        '0.95': 69.13,\n        '0.9': 73.29,\n        '0.5': 89.33,\n        '0.1': 107.57,\n        '0.05': 113.14,\n        '0.025': 118.14,\n        '0.01': 124.12,\n        '0.005': 128.3\n    },\n    '100': {\n        '0.995': 67.33,\n        '0.99': 70.06,\n        '0.975': 74.22,\n        '0.95': 77.93,\n        '0.9': 82.36,\n        '0.5': 99.33,\n        '0.1': 118.5,\n        '0.05': 124.34,\n        '0.025': 129.56,\n        '0.01': 135.81,\n        '0.005': 140.17\n    }\n};\n\nmodule.exports = chiSquaredTable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/probability/chiSquaredTable.js\n **/","'use strict';\nconst validator = require('./utils/validator');\nconst epsilon = require('./probability/epsilon');\n\nclass StatisticalDistribution {\n    constructor() {\n        this._validator = validator;\n        this._epsilon = epsilon;\n    }\n\n    /**\n     * Return table of chi squared prob.\n     *\n     * @returns {*}\n     */\n    get chiSquaredProbTable() {\n        return this._chiSquaredProbTable;\n    }\n\n    /**\n     * Return factorial of n (each number multiply the previous)\n     *\n     * @param {number} n\n     * @returns {number}\n     */\n    factorial(n) {\n        this._validator.validate('n', n, ['isNumber', 'positive']);\n\n        let factorialResult = 1;\n        for (let i = 2; i <= n; i++) {\n            factorialResult *= i;\n        }\n\n        return factorialResult;\n    }\n\n    /**\n     * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution)\n     *\n     * @param {number} trials\n     * @param {number} probability\n     * @returns {{}}\n     */\n    binomial(trials, probability) {\n        this._validator.validate('trials', trials, ['isNumber']);\n        this._validator.validate('probability', probability, ['isNumber', [0, 1]]);\n\n        let x = 0;\n        let cumulativeProbability = 0;\n        const cells = {};\n\n        do {\n            cells[x] = this.factorial(trials) / (this.factorial(x) * this.factorial(trials - x)) * (Math.pow(probability, x) * Math.pow(1 - probability, trials - x));\n            cumulativeProbability += cells[x];\n            x++;\n        } while (cumulativeProbability < 1 - this._epsilon);\n\n        return cells;\n    }\n\n    /**\n     * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution)\n     *\n     * @param {number} p\n     * @returns {Object}\n     */\n    bernoulli(p) {\n        this._validator.validate('p', p, ['isNumber', [0, 1]]);\n        return this.binomial(1, p);\n    }\n\n    /**\n     * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution)\n     *\n     * @param {number} lambda\n     * @returns {{}}\n     */\n    poisson(lambda) {\n        this._validator.validate('lambda', lambda, ['strictlyPositive']);\n\n        let x = 0;\n        let cumulativeProbability = 0;\n        let cells = {};\n\n        do {\n            cells[x] = (Math.pow(Math.E, -lambda) * Math.pow(lambda, x)) / this.factorial(x);\n            cumulativeProbability += cells[x];\n            x++;\n        } while (cumulativeProbability < 1 - this._epsilon);\n\n        return cells;\n    }\n}\n\nmodule.exports = StatisticalDistribution;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.distribution.js\n **/"],"sourceRoot":""}