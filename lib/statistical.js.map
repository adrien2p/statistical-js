{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 003cd5e04f77fb810a63","webpack:///./src/statistical.js","webpack:///./src/utils/interceptor.js","webpack:///./src/utils/cacheManager.js","webpack:///./src/statistical.base.js","webpack:///./src/statistical.distribution.js"],"names":["interceptor","require","cacheManager","StatisticalBase","StatisticalDistribution","Statistical","_settings","cache","enabled","rootElementCount","subElementCount","_base","cacheBefore","_distribution","options","Error","Number","isNaN","settings","module","exports","Interceptor","object","Proxy","get","target","propKey","res","find","result","update","dataSet","Reflect","CacheManager","_cache","method","Object","keys","length","splice","push","date","Date","getTime","some","v","_epsilon","Array","isArray","sort","a","b","reduce","val","middle","Math","floor","isEven","counter","mode","max","map","value","index","sum","avg","mean","n","pow","sqrt","variance","ceil","i","from","k","min","median","stdDeviation","quantile","factorialResult","trials","probability","x","cells","cumulativeProbability","factorial"],"mappings":"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","file":"statistical.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"statistical\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"statistical\"] = factory();\n\telse\n\t\troot[\"statistical\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 003cd5e04f77fb810a63\n **/","'use strict';\n\nconst interceptor = require('./utils/interceptor');\nconst cacheManager = require('./utils/cacheManager');\nconst StatisticalBase = require('./statistical.base');\nconst StatisticalDistribution = require('./statistical.distribution');\n\nclass Statistical {\n    constructor() {\n        this._settings = {\n            cache: {\n                enabled: true,\n                rootElementCount: 10,\n                subElementCount: 30\n            }\n        };\n        this._base = interceptor.cacheBefore(new StatisticalBase(), cacheManager, []);\n        this._distribution = interceptor.cacheBefore(new StatisticalDistribution(), cacheManager, []);\n    }\n\n    /**\n     * Return _base object to provide basic statistics methods\n     *\n     * @returns {*}\n     */\n    get base() {\n        return this._base;\n    }\n\n    /**\n     * Return _distribution object to provide distribution statistics methods\n     *\n     * @returns {*}\n     */\n    get distribution() {\n        return this._distribution;\n    }\n\n    /**\n     * Return settings used in statistical class.\n     *\n     * @returns {*}\n     */\n    get settings() {\n        return this._settings;\n    }\n\n    /**\n     * Allow to updates statistical settings.\n     *\n     * @param {*|object} options\n     */\n    set settings(options) {\n        if (!options && !options.cache) throw new Error('Missing parameter options (Statistical:settings');\n        if (Number.isNaN(options.cache.rootElementCount)) throw new Error('rootElementCount must be a number (Statistical:settings');\n        if (Number.isNaN(options.cache.subElementCount)) throw new Error('subElementCount must be a number (Statistical:settings');\n\n        this._settings = {\n            cache: {\n                enabled: options.cache.enabled,\n                rootElementCount: options.cache.rootElementCount || 10,\n                subElementCount: options.cache.subElementCount || 30\n            }\n        };\n        cacheManager.settings = this._settings.cache;\n    }\n}\n\n\nmodule.exports = new Statistical();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.js\n **/","'use strict';\n\nclass Interceptor {\n    constructor() {}\n\n    /**\n     * Create a proxy to wrap a class method and intercept each call.\n     *\n     * @param {object} object\n     * @param {object} cacheManager\n     * @param {Array} propertyExcluded\n     */\n    cacheBefore(object, cacheManager) {\n        return new Proxy(object, {\n            get: (target, propKey) => {\n                if (propKey in target) {\n                    return (...args) => {\n                        let res;\n                        if (!cacheManager.settings.enabled) {\n                            const cache = cacheManager.find(propKey, args[0]);\n                            if (cache) return cache.result;\n\n                            res = target[propKey](...args);\n                            cacheManager.update(propKey, {dataSet: args[0], result: res});\n                        } else {\n                            res = target[propKey](...args);\n                        }\n\n                        return res;\n                    };\n                } else {\n                    return Reflect.get(target, propKey);\n                }\n            }\n        });\n    }\n}\n\nmodule.exports = new Interceptor();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/interceptor.js\n **/","'use strict';\n\nclass CacheManager {\n    constructor() {\n        this._cache = {};\n        this._settings = {\n            enabled: true,\n            rootElementCount: 10,\n            subElementCount: 30\n        };\n    }\n\n    /**\n     * Return CacheManager settings\n     *\n     * @returns {{maxLength: number}|*}\n     */\n    get settings() {\n        return this._settings;\n    }\n\n    /**\n     * Return the entire cache\n     *\n     * @returns {{}|*}\n     */\n    get cache() {\n        return this._cache;\n    }\n\n    /**\n     * Update existing settings to manage cache\n     *\n     * @param {*} options\n     */\n    set settings(options) {\n        if (!options) throw new Error('Missing parameter options (CacheManager:settings');\n        this._settings = {\n            enabled: options.enabled,\n            rootElementCount: options.rootElementCount || 10,\n            subElementCount: options.subElementCount || 30\n        };\n    }\n\n    /**\n     * Update the cache saved with new results\n     *\n     * @param method\n     * @param {Object} options\n     */\n    update(method, options) {\n        if (Object.keys(this._cache).length >= this._settings.rootElementCount) delete this._cache[Object.keys(this._cache)[0]];\n        if (this._cache[method] && this._cache[method].length >= this._settings.subElementCount) this._cache[method].splice(0, 1);\n\n        this._cache[method] = this._cache[method] || [];\n        this._cache[method].push({\n            date: new Date().getTime(),\n            dataSet: options.dataSet,\n            result: options.result\n        });\n    }\n\n    /**\n     * Find an existing dataSet in the cache and return it\n     *\n     * @param {String} method\n     * @param {Array} dataSet\n     * @returns {Object}\n     * @private\n     */\n    find(method, dataSet) {\n        const cache = this._cache[method] || [];\n\n        let res = null;\n        cache.some(v => {\n            if (v.dataSet === dataSet) {\n                res = v;\n                return true;\n            }\n\n            return false;\n        });\n\n        return res;\n    }\n}\n\nmodule.exports = new CacheManager();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/cacheManager.js\n **/","'use strict';\n\nclass StatisticalBase {\n    constructor() {\n        /**\n         * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n         * until we're \"close enough\". Epsilon is a very small number: for\n         * simple statistics, that number is **0.0001**\n         *\n         * This is used in calculations like the binomialDistribution, in which\n         * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n         * it progresses until it is close enough.\n         *\n         * @type {number}\n         */\n        this._epsilon = 0.0001;\n    }\n\n    /**\n     * Return the smallest value of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    min(dataSet) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:min).');\n        if (!Array.isArray(dataSet)) throw new Error('dataSet must be an array (Statistical.base:min).');\n\n        return dataSet.sort((a, b) => a - b)[0];\n    }\n\n    /**\n     * Return the biggest value of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    max(dataSet) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:max).');\n        if (!Array.isArray(dataSet)) throw new Error('dataSet must be an array (Statistical.base:max).');\n\n        return dataSet.sort((a, b) => a + b)[0];\n    }\n\n\n    /**\n     * Take array and return sum of each elements.\n     *\n     * @param dataSet\n     * @returns {*}\n     */\n    sum(dataSet) {\n        return dataSet.reduce((res, val) => {\n            if (Number.isNaN(val)) throw new Error('dataSet must contain only numbers (Statistical.base:sum).');\n            return res + val;\n        }, 0);\n    }\n\n    /**\n     * Compute median for dataSet, the central value.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    median(dataSet) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:median).');\n        if (!Array.isArray(dataSet)) throw new Error('dataSet must be an array (Statistical.base:median).');\n\n        const middle = Math.floor(dataSet.length / 2);\n        const isEven = dataSet.length % 2 === 0;\n\n        dataSet = dataSet.sort((a, b) => a - b);\n\n        return isEven ? (dataSet[middle - 1] + dataSet[middle]) / 2 : dataSet[middle];\n    }\n\n    /**\n     * Get the value wit the miximum occurence.\n     *\n     * @param {Array} dataSet\n     * @returns {*}\n     */\n    mode(dataSet) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:mode).');\n        if (!Array.isArray(dataSet)) throw new Error('dataSet must be an array (Statistical.base:mode).');\n\n        const counter = {};\n        let mode = [];\n        let max = 0;\n\n        dataSet.map((value, index) => {\n            if (!(dataSet[index] in counter)) counter[dataSet[index]] = 0;\n\n            counter[dataSet[index]]++;\n\n            if (counter[dataSet[index]] === max) mode.push(dataSet[index]);\n            if (counter[dataSet[index]] > max) {\n                max = counter[dataSet[index]];\n                mode = [dataSet[index]];\n            }\n        });\n\n        return mode.length > 1 ? mode : mode[0];\n    }\n\n    /**\n     * Compute mean for dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    mean(dataSet) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:mean).');\n        if (!Array.isArray(dataSet)) throw new Error('dataSet must be an array (Statistical.base:mean).');\n\n        return this.sum(dataSet) / dataSet.length;\n    }\n\n    /**\n     * Compute variance for dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    variance(dataSet) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:variance).');\n        if (!Array.isArray(dataSet)) throw new Error('dataSet must be an array (Statistical.base:variance).');\n\n        const avg = this.mean(dataSet);\n        const n = dataSet.length;\n\n        return this.sum(dataSet.map(value => Math.pow(value - avg, 2))) / n;\n    }\n\n    /**\n     * Compute standard deviation for dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    stdDeviation(dataSet) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:stdDeviation).');\n        if (!Array.isArray(dataSet)) throw new Error('dataSet must be an array (Statistical.base:stdDeviation).');\n\n        return Math.sqrt(this.variance(dataSet));\n    }\n\n    /**\n     * Provided the quantile asked by the index given, if no index given, return all quantile of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @param {number} index\n     * @returns {Array}\n     */\n    quantile(dataSet, index = null) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:quantile).');\n        if (index && (Number.isNaN(index) || index < 0 || index > 4)) throw new Error('index must be a number and between 1 - 4 (Statistical.base:quantile).');\n\n        dataSet = dataSet.sort((a, b) => a - b);\n        return !index ?\n            [1, 2, 3, 4].map(i => dataSet[Math.ceil((dataSet.length * (i / 4))) - 1]) :\n            dataSet[Math.ceil((dataSet.length * (index / 4)) - 1)];\n    }\n\n    /**\n     * Provided the percentile asked by the index given, if no index given, return all percentile of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @param {number} index\n     * @returns {Array}\n     */\n    percentile(dataSet, index = null) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:percentile).');\n        if (index && (Number.isNaN(index) || index < 0 || index > 100)) throw new Error('index must be a number and between 1 - 100 (Statistical.base:percentile)');\n\n        dataSet = dataSet.sort((a, b) => a - b);\n        return !index ? Array.from({length: 99}, (v, k) => k + 1).map(i => dataSet[i]) : dataSet[Math.ceil((index / 100) * dataSet.length)];\n    }\n\n    /**\n     * Return the entire result of descriptives statistics above\n     *\n     * @param {Array} dataSet\n     * @returns {{min: number, max: number, sum: *, median: number, mode: *, mean: number, variance: number, stdDeviation: number, quantile: Array}}\n     */\n    summary(dataSet) {\n        if (!dataSet) throw new Error('Missing parameter dataSet (Statistical.base:summary).');\n        if (!Array.isArray(dataSet)) throw new Error('dataSet must be an array (Statistical.base:summary).');\n\n        return {\n            min: this.min(dataSet),\n            max: this.max(dataSet),\n            sum: this.sum(dataSet),\n            median: this.median(dataSet),\n            mode: this.mode(dataSet),\n            mean: this.mean(dataSet),\n            variance: this.variance(dataSet),\n            stdDeviation: this.stdDeviation(dataSet),\n            quantile: this.quantile(dataSet)\n        };\n    }\n\n    /**\n     * Return factorial of n (each number multiply the previous)\n     *\n     * @param {number} n\n     * @returns {number}\n     */\n    factorial(n) {\n        if (Number.isNaN(n)) throw new Error('Missing parameter n and must be a number (Statistical.base:factorial).');\n        if (n < 0) throw new Error('n must be positive');\n\n        let factorialResult = 1;\n        for (let i = 2; i <= n; i++) {\n            factorialResult *= i;\n        }\n\n        return factorialResult;\n    }\n}\n\n\nmodule.exports = StatisticalBase;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.base.js\n **/","'use strict';\n\nconst StatisticalBase = require('./statistical.base');\n\nclass StatisticalDistribution extends StatisticalBase {\n    constructor() {\n        super();\n    }\n\n    /**\n     * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution)\n     *\n     * @param {number} trials number of trials to simulate\n     * @param {number} probability\n     * @returns {Object} output\n     */\n    binomial(trials, probability) {\n        if (!trials) throw new Error('Missing parameter trials (Statistical.distribution:binomial).');\n        if (!probability) throw new Error('Missing parameter probability (Statistical.distribution:binomial).');\n        if (probability < 0 || probability > 1 || trials <= 1) {\n            throw new Error('probability must fall between 0 - 1 and trials gretter than 1');\n        }\n\n        let x = 0;\n        let cells = {};\n        let cumulativeProbability = 0;\n\n        do {\n            cells[x] = this.factorial(trials) / (this.factorial(x) * this.factorial(trials - x)) * (Math.pow(probability, x) * Math.pow(1 - probability, trials - x));\n            cumulativeProbability += cells[x];\n            x++;\n        } while (cumulativeProbability < 1 - this._epsilon);\n\n        return cells;\n    }\n\n\n}\n\n\nmodule.exports = StatisticalDistribution;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.distribution.js\n **/"],"sourceRoot":""}