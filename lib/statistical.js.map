{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 90ae46bb733cab7a1d0a","webpack:///./src/statistical.js"],"names":["Statistical","set","reduce","a","b","Number","isNaN","Error","sets","avg","Object","values","forEach","Array","isArray","push","sum","length","keys","average","n","map","v","i","Math","pow","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;;;;;;;;KAEqBA,W;AAEjB,4BAAc;AAAA;AAAE;;AAEhB;;;;;;;;;;6BAMIC,G,EAAK;AACL,oBAAOA,IAAIC,MAAJ,CAAW,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxB,qBAAIC,OAAOC,KAAP,CAAaH,CAAb,KAAmBE,OAAOC,KAAP,CAAaF,CAAb,CAAvB,EAAwC,MAAM,IAAIG,KAAJ,CAAU,uCAAV,CAAN;AACxC,wBAAOJ,IAAIC,CAAX;AACH,cAHM,EAGJ,CAHI,CAAP;AAIH;;AAED;;;;;;;;;iCAMQI,I,EAAM;AAAA;;AACV,iBAAI,CAACA,IAAL,EAAW,MAAM,IAAID,KAAJ,CAAU,kCAAV,CAAN;;AAEX,iBAAME,MAAM,EAAZ;AACAC,oBAAOC,MAAP,CAAcH,IAAd,EAAoBI,OAApB,CAA4B,eAAO;AAC/B,qBAAI,CAACC,MAAMC,OAAN,CAAcb,GAAd,CAAL,EAAyB,MAAM,IAAIM,KAAJ,CAAU,8BAAV,CAAN;AACzBE,qBAAIM,IAAJ,CAAS,MAAKC,GAAL,CAASf,GAAT,IAAgBA,IAAIgB,MAA7B;AACH,cAHD;;AAKA,iBAAIR,IAAIQ,MAAJ,KAAe,CAAnB,EAAsB,OAAOR,IAAI,CAAJ,CAAP;AACtB,oBAAOA,GAAP;AACH;;AAED;;;;;;;;;kCAMSD,I,EAAM;AAAA;;AACX,iBAAI,CAACA,IAAL,EAAW,MAAM,IAAID,KAAJ,CAAU,mCAAV,CAAN;;AAEX,iBAAME,MAAMC,OAAOQ,IAAP,CAAYV,IAAZ,EAAkBS,MAAlB,GAA2B,CAA3B,GAA+B,KAAKE,OAAL,CAAaX,IAAb,CAA/B,GAAoD,CAAC,KAAKW,OAAL,CAAaX,IAAb,CAAD,CAAhE;AACA,iBAAMY,IAAIV,OAAOC,MAAP,CAAcH,IAAd,EAAoBa,GAApB,CAAwB;AAAA,wBAAOpB,IAAIgB,MAAX;AAAA,cAAxB,CAAV;AACA,iBAAMK,IAAI,EAAV;;AAEAZ,oBAAOC,MAAP,CAAcH,IAAd,EAAoBI,OAApB,CAA4B,UAACX,GAAD,EAAMsB,CAAN,EAAY;AACpC,qBAAI,CAACV,MAAMC,OAAN,CAAcb,GAAd,CAAL,EAAyB,MAAM,IAAIM,KAAJ,CAAU,8BAAV,CAAN;AACzBe,mBAAEP,IAAF,CAAQ,OAAKC,GAAL,CAASf,IAAIoB,GAAJ,CAAQ;AAAA,4BAASG,KAAKC,GAAL,CAASC,QAAQjB,IAAIc,CAAJ,CAAjB,EAAyB,CAAzB,CAAT;AAAA,kBAAR,CAAT,IAA0DH,EAAEG,CAAF,CAAlE;AACH,cAHD;;AAKA,iBAAID,EAAEL,MAAF,KAAa,CAAjB,EAAoB,OAAOK,EAAE,CAAF,CAAP;AACpB,oBAAOA,CAAP;AACH;;;;;;mBAxDgBtB,W","file":"statistical.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"statistical\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"statistical\"] = factory();\n\telse\n\t\troot[\"statistical\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 90ae46bb733cab7a1d0a\n **/","'use strict';\n\nexport default class Statistical {\n\n    constructor() {}\n\n    /**\n     * Take array and return sum of each elements\n     *\n     * @param {Array} set\n     * @returns {*}\n     */\n    sum(set) {\n        return set.reduce((a, b) => {\n            if (Number.isNaN(a) || Number.isNaN(b)) throw new Error('Set of data must contain only numbers');\n            return a + b;\n        }, 0);\n    }\n\n    /**\n     * Compute average for each set of data provided in the object parameter\n     *\n     * @param {object} sets\n     * @returns {*}\n     */\n    average(sets) {\n        if (!sets) throw new Error('Missing parameter sets (average)');\n\n        const avg = [];\n        Object.values(sets).forEach(set => {\n            if (!Array.isArray(set)) throw new Error('Set of data must be an array');\n            avg.push(this.sum(set) / set.length);\n        });\n\n        if (avg.length === 1) return avg[0];\n        return avg;\n    }\n\n    /**\n     * Compute variance for each set of data provided in the object parameter\n     *\n     * @param {object} sets\n     * @returns {*}\n     */\n    variance(sets) {\n        if (!sets) throw new Error('Missing parameter sets (variance)');\n\n        const avg = Object.keys(sets).length > 1 ? this.average(sets) : [this.average(sets)];\n        const n = Object.values(sets).map(set => set.length);\n        const v = [];\n\n        Object.values(sets).forEach((set, i) => {\n            if (!Array.isArray(set)) throw new Error('Set of data must be an array');\n            v.push((this.sum(set.map(value => Math.pow(value - avg[i], 2))) / n[i]));\n        });\n\n        if (v.length === 1) return v[0];\n        return v;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.js\n **/"],"sourceRoot":""}