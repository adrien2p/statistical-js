{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///statistical.min.js","webpack:///webpack/bootstrap f3b3ad9912a2dba13f3c","webpack:///./src/statistical.js","webpack:///./src/utils/hook.js","webpack:///./src/utils/cacheManager.js","webpack:///./src/utils/validator.js","webpack:///./src/methods/statistical.method.js","webpack:///./src/constante/epsilon.js","webpack:///./src/constante/chiSquaredTable.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_hook","_hook2","_cacheManager","_cacheManager2","_validator","_validator2","_statistical","_statistical2","Statistical","_settings","cache","enabled","rootElementCount","subElementCount","get","set","options","settings","statistical","Hook","cacheManager","Proxy","property","res","find","arguments","undefined","result","apply","update","dataSet","Reflect","hook","CacheManager","_cache","method","keys","splice","push","date","Date","getTime","some","v","Validator","parameterName","rules","Error","map","r","Array","isArray","hasOnlyNumbers","includes","_epsilon","_epsilon2","_chiSquaredTable","_chiSquaredTable2","StatisticalMethod","_chiSquaredProbTable","sample","validate","sort","a","b","reduce","accumulator","current","middle","Math","floor","isEven","mode","counter","max","index","sum","avg","mean","n","pow","sqrt","variance","sortedSample","ceil","min","median","stdDeviation","quantile","q1","q3","factorialResult","sampleVariance","sample1","sample2","meanX","meanY","numerator","besselsCorrection","trials","probability","x","cumulativeProbability","cells","factorial","binomial","lambda","E","distributionType","significance","observedFrequencies","val","filter","sampleMean","hypothesizedDistribution","expectedFrequencies","entries","reduceRight","previous","chiSquared","degreesOfFreedom","mu","sd","sqrtSampleSize","sampleVarianceX","sampleVarianceY","weightedVariance","data","dataLength","slope","intersect","sumX","sumY","sumXX","sumXY","forEach","element","epsilon","chiSquaredTable","1","0.995","0.99","0.975","0.95","0.9","0.5","0.1","0.05","0.025","0.01","0.005","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","40","50","60","70","80","90","100"],"mappings":"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","file":"statistical.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"statistical\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"statistical\"] = factory();\n\telse\n\t\troot[\"statistical\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"statistical\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"statistical\"] = factory();\n\telse\n\t\troot[\"statistical\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _hook = __webpack_require__(2);\n\t\n\tvar _hook2 = _interopRequireDefault(_hook);\n\t\n\tvar _cacheManager = __webpack_require__(3);\n\t\n\tvar _cacheManager2 = _interopRequireDefault(_cacheManager);\n\t\n\tvar _validator = __webpack_require__(4);\n\t\n\tvar _validator2 = _interopRequireDefault(_validator);\n\t\n\tvar _statistical = __webpack_require__(5);\n\t\n\tvar _statistical2 = _interopRequireDefault(_statistical);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Statistical = function () {\n\t    function Statistical() {\n\t        _classCallCheck(this, Statistical);\n\t\n\t        this._validator = new _validator2.default();\n\t        this._settings = {\n\t            cache: {\n\t                enabled: true,\n\t                rootElementCount: 10,\n\t                subElementCount: 30\n\t            }\n\t        };\n\t    }\n\t\n\t    /**\n\t     * Return settings used in statistical class.\n\t     *\n\t     * @returns {*}\n\t     */\n\t\n\t\n\t    _createClass(Statistical, [{\n\t        key: 'settings',\n\t        get: function get() {\n\t            return this._settings;\n\t        }\n\t\n\t        /**\n\t         * Allow to updates statistical settings.\n\t         *\n\t         * @param {*|object} options\n\t         */\n\t        ,\n\t        set: function set(options) {\n\t            this._settings = {\n\t                cache: {\n\t                    enabled: options.cache.enabled,\n\t                    rootElementCount: options.cache.rootElementCount || this._settings.cache.rootElementCount,\n\t                    subElementCount: options.cache.subElementCount || this._settings.cache.subElementCount\n\t                }\n\t            };\n\t            _cacheManager2.default.settings = this._settings.cache;\n\t        }\n\t    }, {\n\t        key: 'methods',\n\t        get: function get() {\n\t            return _hook2.default.cache(new _statistical2.default(), _cacheManager2.default);\n\t        }\n\t    }]);\n\t\n\t    return Statistical;\n\t}();\n\t\n\tvar statistical = new Statistical();\n\texports.default = statistical;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Hook = function () {\n\t    function Hook() {\n\t        _classCallCheck(this, Hook);\n\t    }\n\t\n\t    /**\n\t     * Create a proxy to wrap a class method and intercept each call.\n\t     *\n\t     * @param {object} target\n\t     * @param {object} cacheManager\n\t     */\n\t\n\t\n\t    _createClass(Hook, [{\n\t        key: 'cache',\n\t        value: function cache(target, cacheManager) {\n\t            return new Proxy(target, {\n\t                get: function get(target, property) {\n\t                    if (property in target && typeof target[property] === 'function') {\n\t                        return function () {\n\t                            var res = void 0;\n\t                            if (cacheManager.settings.enabled) {\n\t                                var cache = cacheManager.find(property, arguments.length <= 0 ? undefined : arguments[0]);\n\t                                if (cache) return cache.result;\n\t\n\t                                res = target[property].apply(target, arguments);\n\t                                cacheManager.update(property, { dataSet: arguments.length <= 0 ? undefined : arguments[0], result: res });\n\t                            } else {\n\t                                res = target[property].apply(target, arguments);\n\t                            }\n\t\n\t                            return res;\n\t                        };\n\t                    } else {\n\t                        return Reflect.get(target, property);\n\t                    }\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Hook;\n\t}();\n\t\n\tvar hook = new Hook();\n\texports.default = hook;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validator = __webpack_require__(4);\n\t\n\tvar _validator2 = _interopRequireDefault(_validator);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CacheManager = function () {\n\t    function CacheManager() {\n\t        _classCallCheck(this, CacheManager);\n\t\n\t        this._validator = new _validator2.default();\n\t        this._cache = {};\n\t        this._settings = {\n\t            enabled: true,\n\t            rootElementCount: 10,\n\t            subElementCount: 30\n\t        };\n\t    }\n\t\n\t    /**\n\t     * Return CacheManager settings.\n\t     *\n\t     * @returns {{maxLength: number}|*}\n\t     */\n\t\n\t\n\t    _createClass(CacheManager, [{\n\t        key: 'update',\n\t\n\t\n\t        /**\n\t         * Update the cache saved with new results.\n\t         *\n\t         * @param {string} method\n\t         * @param {Object} options\n\t         */\n\t        value: function update(method, options) {\n\t            if (Object.keys(this._cache).length >= this._settings.rootElementCount) delete this._cache[Object.keys(this._cache)[0]];\n\t            if (this._cache[method] && this._cache[method].length >= this._settings.subElementCount) this._cache[method].splice(0, 1);\n\t\n\t            this._cache[method] = this._cache[method] || [];\n\t            this._cache[method].push({\n\t                date: new Date().getTime(),\n\t                dataSet: options.dataSet,\n\t                result: options.result\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Find an existing dataSet in the cache and return it.\n\t         *\n\t         * @param {String} method\n\t         * @param {Array} dataSet\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'find',\n\t        value: function find(method, dataSet) {\n\t            var cache = this._cache[method] || [];\n\t\n\t            var res = null;\n\t            cache.some(function (v) {\n\t                if (v.dataSet === dataSet) {\n\t                    res = v;\n\t                    return true;\n\t                }\n\t\n\t                return false;\n\t            });\n\t\n\t            return res;\n\t        }\n\t\n\t        /**\n\t         * Reset the cache to be empty.\n\t         */\n\t\n\t    }, {\n\t        key: 'reset',\n\t        value: function reset() {\n\t            this._cache = {};\n\t        }\n\t    }, {\n\t        key: 'settings',\n\t        get: function get() {\n\t            return this._settings;\n\t        }\n\t\n\t        /**\n\t         * Return the entire cache\n\t         *\n\t         * @returns {{}|*}\n\t         */\n\t        ,\n\t\n\t\n\t        /**\n\t         * Update existing settings to manage cache.\n\t         *\n\t         * @param {*} options\n\t         */\n\t        set: function set(options) {\n\t            this._settings = {\n\t                enabled: options.enabled,\n\t                rootElementCount: options.rootElementCount || this._settings.rootElementCount,\n\t                subElementCount: options.subElementCount || this._settings.subElementCount\n\t            };\n\t        }\n\t    }, {\n\t        key: 'cache',\n\t        get: function get() {\n\t            return this._cache;\n\t        }\n\t    }]);\n\t\n\t    return CacheManager;\n\t}();\n\t\n\tvar cacheManager = new CacheManager();\n\texports.default = cacheManager;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Validator = function () {\n\t    function Validator() {\n\t        _classCallCheck(this, Validator);\n\t    }\n\t\n\t    /**\n\t     * Valid a value with rules given, if the rules are not respected throw an error.\n\t     *\n\t     * @param {string} parameterName\n\t     * @param {*} value\n\t     * @param {Array} ruless\n\t     */\n\t\n\t\n\t    _createClass(Validator, [{\n\t        key: 'validate',\n\t        value: function validate(parameterName, value, rules) {\n\t            if (typeof value === 'undefined') throw new Error('Missing parameter ' + parameterName);\n\t\n\t            rules.map(function (r) {\n\t                switch (r) {\n\t                    case 'isArray':\n\t                        if (!Array.isArray(value)) throw new Error('Parameter ' + parameterName + ' must be an array');\n\t                        break;\n\t                    case 'isNumber':\n\t                        if (typeof value !== 'number') throw new Error('Parameter ' + parameterName + ' must be a number');\n\t                        break;\n\t                    case 'isString':\n\t                        if (typeof value !== 'string') throw new Error('Parameter ' + parameterName + ' must be a string');\n\t                        break;\n\t                    case 'isFunction':\n\t                        if (typeof value !== 'function') throw new Error('Parameter ' + parameterName + ' must be a function');\n\t                        break;\n\t                    case 'length > 0':\n\t                        if (value.length === 0) throw new Error('Parameter ' + parameterName + ' must have more than 0 values');\n\t                        break;\n\t                    case 'positive':\n\t                        if (value < 0) throw new Error('Parameter ' + parameterName + ' must be positive');\n\t                        break;\n\t                    case 'strictlyPositive':\n\t                        if (value <= 0) throw new Error('Parameter ' + parameterName + ' must be strictly positive');\n\t                        break;\n\t                    case 'length =':\n\t                        if (value[0].length !== value[1].length) throw new Error('Parameter ' + parameterName + ' must have the same number of values');\n\t                        break;\n\t                    default:\n\t                        if (Array.isArray(r)) {\n\t                            var hasOnlyNumbers = !r.map(function (v) {\n\t                                return typeof v === 'number';\n\t                            }).includes(false);\n\t                            if (hasOnlyNumbers) {\n\t                                if (r.length === 2) {\n\t                                    if (value < r[0] || value > r[1]) throw new Error('Parameter ' + parameterName + ' must fall between ' + r[0] + ' and ' + r[1]);\n\t                                }\n\t                            }\n\t                        } else {\n\t                            throw new Error('Rule not implemented : ' + r);\n\t                        }\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Validator;\n\t}();\n\t\n\texports.default = Validator;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _validator = __webpack_require__(4);\n\t\n\tvar _validator2 = _interopRequireDefault(_validator);\n\t\n\tvar _epsilon = __webpack_require__(6);\n\t\n\tvar _epsilon2 = _interopRequireDefault(_epsilon);\n\t\n\tvar _chiSquaredTable = __webpack_require__(7);\n\t\n\tvar _chiSquaredTable2 = _interopRequireDefault(_chiSquaredTable);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar StatisticalMethod = function () {\n\t    function StatisticalMethod() {\n\t        _classCallCheck(this, StatisticalMethod);\n\t\n\t        this._validator = new _validator2.default();\n\t        this._chiSquaredProbTable = _chiSquaredTable2.default;\n\t        this._epsilon = _epsilon2.default;\n\t    }\n\t\n\t    /**\n\t     * Return table of chi squared prob.\n\t     *\n\t     * @returns {*}\n\t     */\n\t\n\t\n\t    _createClass(StatisticalMethod, [{\n\t        key: 'min',\n\t\n\t\n\t        /**\n\t         * Return the smallest value of the sample.\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t        value: function min(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            return sample.sort(function (a, b) {\n\t                return a - b;\n\t            })[0];\n\t        }\n\t\n\t        /**\n\t         * Return the biggest value of the sample.\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'max',\n\t        value: function max(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            return sample.sort(function (a, b) {\n\t                return a + b;\n\t            })[0];\n\t        }\n\t\n\t        /**\n\t         * The [Sum](https://en.wikipedia.org/wiki/Sum).\n\t         *\n\t         * @param sample\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'sum',\n\t        value: function sum(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            return sample.reduce(function (accumulator, current) {\n\t                return accumulator + current;\n\t            }, 0);\n\t        }\n\t\n\t        /**\n\t         * The [Median](https://en.wikipedia.org/wiki/Median).\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'median',\n\t        value: function median(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t\n\t            var middle = Math.floor(sample.length / 2);\n\t            var isEven = sample.length % 2 === 0;\n\t\n\t            sample = sample.sort(function (a, b) {\n\t                return a - b;\n\t            });\n\t\n\t            return isEven ? (sample[middle - 1] + sample[middle]) / 2 : sample[middle];\n\t        }\n\t\n\t        /**\n\t         * The [Mode](https://en.wikipedia.org/wiki/Mode).\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'mode',\n\t        value: function mode(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t\n\t            var counter = {};\n\t            var mode = [];\n\t            var max = 0;\n\t\n\t            sample.map(function (value, index) {\n\t                if (!(sample[index] in counter)) counter[sample[index]] = 0;\n\t\n\t                counter[sample[index]]++;\n\t\n\t                if (counter[sample[index]] === max) mode.push(sample[index]);\n\t                if (counter[sample[index]] > max) {\n\t                    max = counter[sample[index]];\n\t                    mode = [sample[index]];\n\t                }\n\t            });\n\t\n\t            return mode.length > 1 ? mode : mode[0];\n\t        }\n\t\n\t        /**\n\t         * The [Mean](https://en.wikipedia.org/wiki/Mean).\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'mean',\n\t        value: function mean(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t\n\t            return this.sum(sample) / sample.length;\n\t        }\n\t\n\t        /**\n\t         * The [Variance](https://en.wikipedia.org/wiki/Variance).\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'variance',\n\t        value: function variance(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t\n\t            var avg = this.mean(sample);\n\t            var n = sample.length;\n\t\n\t            return this.sum(sample.map(function (value) {\n\t                return Math.pow(value - avg, 2);\n\t            })) / n;\n\t        }\n\t\n\t        /**\n\t         * The [Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation).\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'stdDeviation',\n\t        value: function stdDeviation(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            return Math.sqrt(this.variance(sample));\n\t        }\n\t\n\t        /**\n\t         * The [Quantile](http://en.wikipedia.org/wiki/Quantile).\n\t         *\n\t         * @param {Array} sample\n\t         * @param {number} index\n\t         * @returns {Array}\n\t         */\n\t\n\t    }, {\n\t        key: 'quantile',\n\t        value: function quantile(sample, index) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            this._validator.validate('index', index, ['isNumber', [0, 1]]);\n\t\n\t            var sortedSample = sample.sort(function (a, b) {\n\t                return a - b;\n\t            });\n\t\n\t            return sortedSample[Math.ceil(sample.length * index - 1)];\n\t        }\n\t\n\t        /**\n\t         * The [Percentile](https://en.wikipedia.org/wiki/Percentile).\n\t         *\n\t         * @param {Array} sample\n\t         * @param {number} index\n\t         * @returns {Array}\n\t         */\n\t\n\t    }, {\n\t        key: 'percentile',\n\t        value: function percentile(sample, index) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            this._validator.validate('index', index, ['isNumber', [0, 100]]);\n\t\n\t            var sortedSample = sample.sort(function (a, b) {\n\t                return a - b;\n\t            });\n\t            return sortedSample[Math.ceil(index / 100 * sample.length)];\n\t        }\n\t\n\t        /**\n\t         * Return the entire result of descriptives statistics above.\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {{min: number, max: number, sum: *, median: number, mode: *, mean: number, variance: number, stdDeviation: number, quantile: Array}}\n\t         */\n\t\n\t    }, {\n\t        key: 'summary',\n\t        value: function summary(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t\n\t            return {\n\t                min: this.min(sample),\n\t                max: this.max(sample),\n\t                sum: this.sum(sample),\n\t                median: this.median(sample),\n\t                mode: this.mode(sample),\n\t                mean: this.mean(sample),\n\t                variance: this.variance(sample),\n\t                stdDeviation: this.stdDeviation(sample),\n\t                quantile: {\n\t                    q1: this.quantile(sample, 0.25),\n\t                    q3: this.quantile(sample, 0.75)\n\t                }\n\t            };\n\t        }\n\t\n\t        /**\n\t         * The [Factorial](https://en.wikipedia.org/wiki/Factorial).\n\t         *\n\t         * @param {number} n\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'factorial',\n\t        value: function factorial(n) {\n\t            this._validator.validate('n', n, ['isNumber', 'positive']);\n\t\n\t            var factorialResult = 1;\n\t            for (var i = 2; i <= n; i++) {\n\t                factorialResult *= i;\n\t            }\n\t\n\t            return factorialResult;\n\t        }\n\t\n\t        /**\n\t         * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean).\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'geometricMean',\n\t        value: function geometricMean(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            return Math.pow(sample.reduce(function (accumulator, current) {\n\t                return accumulator * current;\n\t            }, 1), 1 / sample.length);\n\t        }\n\t\n\t        /**\n\t         * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean).\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'harmonicMean',\n\t        value: function harmonicMean(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            return sample.length / sample.reduce(function (accumulator, current) {\n\t                return accumulator + 1 / current;\n\t            }, 0);\n\t        }\n\t\n\t        /**\n\t         * The [Interquartile range](http://en.wikipedia.org/wiki/Interquartile_range)\n\t         *\n\t         * @param sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'interQuartileRange',\n\t        value: function interQuartileRange(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            return this.quantile(sample, 0.75) - this.quantile(sample, 0.25);\n\t        }\n\t\n\t        /**\n\t         * The [Variance](https://en.wikipedia.org/wiki/Harmonic_mean).\n\t         * The [Biais](https://fr.wikipedia.org/wiki/Estimateur_(statistique)#Biais).\n\t         *\n\t         * Non biased variance\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'sampleVariance',\n\t        value: function sampleVariance(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t\n\t            var avg = this.mean(sample);\n\t            var n = sample.length - 1;\n\t\n\t            return this.sum(sample.map(function (value) {\n\t                return Math.pow(value - avg, 2);\n\t            })) / n;\n\t        }\n\t\n\t        /**\n\t         * The [Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation).\n\t         * The [Biais](https://fr.wikipedia.org/wiki/Estimateur_(statistique)#Biais).\n\t         *\n\t         * Non biased std deviation\n\t         *\n\t         * @param {Array} sample\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'sampleStdDeviation',\n\t        value: function sampleStdDeviation(sample) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            return Math.sqrt(this.sampleVariance(sample));\n\t        }\n\t\n\t        /**\n\t         * The [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\n\t         *\n\t         * @param {Array} sample1\n\t         * @param {Array} sample2\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'covariance',\n\t        value: function covariance(sample1, sample2) {\n\t            this._validator.validate('sample1', sample1, ['isArray', 'length > 0']);\n\t            this._validator.validate('sample2', sample2, ['isArray', 'length > 0']);\n\t            this._validator.validate('sample1 and sample2', [sample1, sample2], ['length =']);\n\t\n\t            var meanX = this.mean(sample1);\n\t            var meanY = this.mean(sample2);\n\t\n\t            var numerator = sample1.reduce(function (accumulator, current, i) {\n\t                accumulator += (current - meanX) * (sample2[i] - meanY);\n\t                return accumulator;\n\t            }, 0);\n\t\n\t            var besselsCorrection = sample1.length - 1;\n\t\n\t            return numerator / besselsCorrection;\n\t        }\n\t\n\t        /**\n\t         * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution).\n\t         *\n\t         * @param {number} trials\n\t         * @param {number} probability\n\t         * @returns {{}}\n\t         */\n\t\n\t    }, {\n\t        key: 'binomial',\n\t        value: function binomial(trials, probability) {\n\t            this._validator.validate('trials', trials, ['isNumber']);\n\t            this._validator.validate('probability', probability, ['isNumber', [0, 1]]);\n\t\n\t            var x = 0;\n\t            var cumulativeProbability = 0;\n\t            var cells = {};\n\t\n\t            do {\n\t                cells[x] = this.factorial(trials) / (this.factorial(x) * this.factorial(trials - x)) * (Math.pow(probability, x) * Math.pow(1 - probability, trials - x));\n\t                cumulativeProbability += cells[x];\n\t                x++;\n\t            } while (cumulativeProbability < 1 - this._epsilon);\n\t\n\t            return cells;\n\t        }\n\t\n\t        /**\n\t         * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution).\n\t         *\n\t         * @param {number} p\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'bernoulli',\n\t        value: function bernoulli(p) {\n\t            this._validator.validate('p', p, ['isNumber', [0, 1]]);\n\t            return this.binomial(1, p);\n\t        }\n\t\n\t        /**\n\t         * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution).\n\t         *\n\t         * @param {number} lambda\n\t         * @returns {{}}\n\t         */\n\t\n\t    }, {\n\t        key: 'poisson',\n\t        value: function poisson(lambda) {\n\t            this._validator.validate('lambda', lambda, ['strictlyPositive']);\n\t\n\t            var x = 0;\n\t            var cumulativeProbability = 0;\n\t            var cells = {};\n\t\n\t            do {\n\t                cells[x] = Math.pow(Math.E, -lambda) * Math.pow(lambda, x) / this.factorial(x);\n\t                cumulativeProbability += cells[x];\n\t                x++;\n\t            } while (cumulativeProbability < 1 - this._epsilon);\n\t\n\t            return cells;\n\t        }\n\t\n\t        /**\n\t         * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test).\n\t         * return if data follow a specified distribution\n\t         *\n\t         * @param {Array} sample\n\t         * @param {Function} distributionType\n\t         * @param {number} significance\n\t         * @returns {boolean}\n\t         *\n\t         * @exemple\n\t         * chiSquaredGoodnessOfFit(sample, 'poisson', 0.05)); //= false\n\t         */\n\t\n\t    }, {\n\t        key: 'chiSquaredGoodnessOfFit',\n\t        value: function chiSquaredGoodnessOfFit(sample, distributionType, significance) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            this._validator.validate('distributionType', distributionType, ['isFunction']);\n\t            this._validator.validate('significance', significance, ['isNumber', 'positive']);\n\t\n\t            /* Generate an array with number of ocurences for each data in sample. */\n\t            var observedFrequencies = [];\n\t            observedFrequencies = sample.reduce(function (accumulator, val) {\n\t                if (accumulator[val] === undefined) accumulator[val] = 0;\n\t                accumulator[val] += 1;\n\t                return accumulator;\n\t            }, []).filter(function (v) {\n\t                return v !== undefined;\n\t            });\n\t\n\t            /* number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test. */\n\t            /* Lose one degree of freedom for estimating `lambda` from the sample data. */\n\t            var sampleMean = this.mean(sample);\n\t\n\t            /* The hypothesized distribution. Generate the hypothesized distribution. */\n\t            var hypothesizedDistribution = distributionType(sampleMean);\n\t\n\t            /* Create an array holding a histogram of expected data given the */\n\t            /* sample size and hypothesized distribution. */\n\t            var expectedFrequencies = [];\n\t            expectedFrequencies = Object.entries(hypothesizedDistribution).reduce(function (accumulator, current, i) {\n\t                if (observedFrequencies[i]) accumulator[i] = current[1] * sample.length;\n\t                return accumulator;\n\t            }, []);\n\t\n\t            /* Concat frequencies < 3 with the previous one */\n\t            expectedFrequencies = Object.entries(expectedFrequencies).reduceRight(function (previous, current) {\n\t                if (previous[1] < 3) current[1] += previous[1];\n\t                return current;\n\t            });\n\t\n\t            /* Compute chiSquared value */\n\t            var chiSquared = 0;\n\t            chiSquared = Object.entries(observedFrequencies).reduce(function (accumulator, current, i) {\n\t                accumulator += Math.pow(current[1] - expectedFrequencies[i], 2) / expectedFrequencies[i];\n\t                return accumulator;\n\t            }, chiSquared);\n\t\n\t            var c = 1;\n\t            var degreesOfFreedom = Object.keys(observedFrequencies).length - c - 1;\n\t\n\t            return this._chiSquaredProbTable[degreesOfFreedom][significance] < chiSquared;\n\t        }\n\t\n\t        /**\n\t         * The [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test).\n\t         *\n\t         * @param {Array} sample\n\t         * @param {number} mu\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'tTestOneSample',\n\t        value: function tTestOneSample(sample, mu) {\n\t            this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\t            this._validator.validate('mu', mu, ['isNumber']);\n\t\n\t            var mean = this.mean(sample);\n\t            var sd = this.stdDeviation(sample);\n\t            var sqrtSampleSize = Math.sqrt(sample.length);\n\t\n\t            /* t-value */\n\t            return (mean - mu) / (sd / sqrtSampleSize);\n\t        }\n\t\n\t        /**\n\t         * The [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n\t         *\n\t         * @param {Array} sample1\n\t         * @param {Array} sample2\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'tTestTwoSample',\n\t        value: function tTestTwoSample(sample1, sample2) {\n\t            this._validator.validate('sample1', sample1, ['isArray', 'length > 0']);\n\t            this._validator.validate('sample2', sample2, ['isArray', 'length > 0']);\n\t\n\t            var n = sample1.length;\n\t            var m = sample2.length;\n\t            var meanX = this.mean(sample1);\n\t            var meanY = this.mean(sample2);\n\t            var sampleVarianceX = this.sampleVariance(sample1);\n\t            var sampleVarianceY = this.sampleVariance(sample2);\n\t\n\t            var weightedVariance = ((n - 1) * sampleVarianceX + (m - 1) * sampleVarianceY) / (n + m - 2);\n\t\n\t            /* t-value */\n\t            return (meanX - meanY) / Math.sqrt(weightedVariance * (1 / (n + 1) / m));\n\t        }\n\t\n\t        /**\n\t         * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n\t         *\n\t         * @param {Array<Array<number>>} data\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'linearRegression',\n\t        value: function linearRegression(data) {\n\t            this._validator.validate('data', data, ['isArray']);\n\t\n\t            var dataLength = data.length;\n\t\n\t            /* 1 element, the result will be a slope to 0 and an intersect ot the second coordinate elements */\n\t            if (dataLength === 1) return { slope: slope, intersect: data[0][1] };\n\t\n\t            /* Compute all sum, and finally the slope and intersect */\n\t            var sumX = 0,\n\t                sumY = 0,\n\t                sumXX = 0,\n\t                sumXY = 0;\n\t\n\t            data.forEach(function (element) {\n\t                sumX += element[0];\n\t                sumY += element[1];\n\t\n\t                sumXX += Math.pow(element[0], 2);\n\t                sumXY += element[0] * element[1];\n\t            });\n\t\n\t            var slope = (dataLength * sumXY - sumX * sumY) / (dataLength * sumXX - sumX * sumX);\n\t            var intersect = sumY / dataLength - slope * sumX / dataLength;\n\t\n\t            // Return both values as an object.\n\t            return { slope: slope, intersect: intersect };\n\t        }\n\t    }, {\n\t        key: 'chiSquaredProbTable',\n\t        get: function get() {\n\t            return this._chiSquaredProbTable;\n\t        }\n\t    }]);\n\t\n\t    return StatisticalMethod;\n\t}();\n\t\n\texports.default = StatisticalMethod;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n\t * until we're \"close enough\". Epsilon is a very small number: for\n\t * simple statistics, that number is **0.0001**\n\t *\n\t * This is used in calculations like the binomialDistribution, in which\n\t * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n\t * it progresses until it is close enough.\n\t *\n\t * @type {number}\n\t */\n\tvar epsilon = 0.0001;\n\texports.default = epsilon;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution)\n\t *\n\t * @type {*}\n\t */\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar chiSquaredTable = {\n\t    '1': {\n\t        '0.995': 0,\n\t        '0.99': 0,\n\t        '0.975': 0,\n\t        '0.95': 0,\n\t        '0.9': 0.02,\n\t        '0.5': 0.45,\n\t        '0.1': 2.71,\n\t        '0.05': 3.84,\n\t        '0.025': 5.02,\n\t        '0.01': 6.63,\n\t        '0.005': 7.88\n\t    },\n\t    '2': {\n\t        '0.995': 0.01,\n\t        '0.99': 0.02,\n\t        '0.975': 0.05,\n\t        '0.95': 0.1,\n\t        '0.9': 0.21,\n\t        '0.5': 1.39,\n\t        '0.1': 4.61,\n\t        '0.05': 5.99,\n\t        '0.025': 7.38,\n\t        '0.01': 9.21,\n\t        '0.005': 10.6\n\t    },\n\t    '3': {\n\t        '0.995': 0.07,\n\t        '0.99': 0.11,\n\t        '0.975': 0.22,\n\t        '0.95': 0.35,\n\t        '0.9': 0.58,\n\t        '0.5': 2.37,\n\t        '0.1': 6.25,\n\t        '0.05': 7.81,\n\t        '0.025': 9.35,\n\t        '0.01': 11.34,\n\t        '0.005': 12.84\n\t    },\n\t    '4': {\n\t        '0.995': 0.21,\n\t        '0.99': 0.3,\n\t        '0.975': 0.48,\n\t        '0.95': 0.71,\n\t        '0.9': 1.06,\n\t        '0.5': 3.36,\n\t        '0.1': 7.78,\n\t        '0.05': 9.49,\n\t        '0.025': 11.14,\n\t        '0.01': 13.28,\n\t        '0.005': 14.86\n\t    },\n\t    '5': {\n\t        '0.995': 0.41,\n\t        '0.99': 0.55,\n\t        '0.975': 0.83,\n\t        '0.95': 1.15,\n\t        '0.9': 1.61,\n\t        '0.5': 4.35,\n\t        '0.1': 9.24,\n\t        '0.05': 11.07,\n\t        '0.025': 12.83,\n\t        '0.01': 15.09,\n\t        '0.005': 16.75\n\t    },\n\t    '6': {\n\t        '0.995': 0.68,\n\t        '0.99': 0.87,\n\t        '0.975': 1.24,\n\t        '0.95': 1.64,\n\t        '0.9': 2.2,\n\t        '0.5': 5.35,\n\t        '0.1': 10.65,\n\t        '0.05': 12.59,\n\t        '0.025': 14.45,\n\t        '0.01': 16.81,\n\t        '0.005': 18.55\n\t    },\n\t    '7': {\n\t        '0.995': 0.99,\n\t        '0.99': 1.25,\n\t        '0.975': 1.69,\n\t        '0.95': 2.17,\n\t        '0.9': 2.83,\n\t        '0.5': 6.35,\n\t        '0.1': 12.02,\n\t        '0.05': 14.07,\n\t        '0.025': 16.01,\n\t        '0.01': 18.48,\n\t        '0.005': 20.28\n\t    },\n\t    '8': {\n\t        '0.995': 1.34,\n\t        '0.99': 1.65,\n\t        '0.975': 2.18,\n\t        '0.95': 2.73,\n\t        '0.9': 3.49,\n\t        '0.5': 7.34,\n\t        '0.1': 13.36,\n\t        '0.05': 15.51,\n\t        '0.025': 17.53,\n\t        '0.01': 20.09,\n\t        '0.005': 21.96\n\t    },\n\t    '9': {\n\t        '0.995': 1.73,\n\t        '0.99': 2.09,\n\t        '0.975': 2.7,\n\t        '0.95': 3.33,\n\t        '0.9': 4.17,\n\t        '0.5': 8.34,\n\t        '0.1': 14.68,\n\t        '0.05': 16.92,\n\t        '0.025': 19.02,\n\t        '0.01': 21.67,\n\t        '0.005': 23.59\n\t    },\n\t    '10': {\n\t        '0.995': 2.16,\n\t        '0.99': 2.56,\n\t        '0.975': 3.25,\n\t        '0.95': 3.94,\n\t        '0.9': 4.87,\n\t        '0.5': 9.34,\n\t        '0.1': 15.99,\n\t        '0.05': 18.31,\n\t        '0.025': 20.48,\n\t        '0.01': 23.21,\n\t        '0.005': 25.19\n\t    },\n\t    '11': {\n\t        '0.995': 2.6,\n\t        '0.99': 3.05,\n\t        '0.975': 3.82,\n\t        '0.95': 4.57,\n\t        '0.9': 5.58,\n\t        '0.5': 10.34,\n\t        '0.1': 17.28,\n\t        '0.05': 19.68,\n\t        '0.025': 21.92,\n\t        '0.01': 24.72,\n\t        '0.005': 26.76\n\t    },\n\t    '12': {\n\t        '0.995': 3.07,\n\t        '0.99': 3.57,\n\t        '0.975': 4.4,\n\t        '0.95': 5.23,\n\t        '0.9': 6.3,\n\t        '0.5': 11.34,\n\t        '0.1': 18.55,\n\t        '0.05': 21.03,\n\t        '0.025': 23.34,\n\t        '0.01': 26.22,\n\t        '0.005': 28.3\n\t    },\n\t    '13': {\n\t        '0.995': 3.57,\n\t        '0.99': 4.11,\n\t        '0.975': 5.01,\n\t        '0.95': 5.89,\n\t        '0.9': 7.04,\n\t        '0.5': 12.34,\n\t        '0.1': 19.81,\n\t        '0.05': 22.36,\n\t        '0.025': 24.74,\n\t        '0.01': 27.69,\n\t        '0.005': 29.82\n\t    },\n\t    '14': {\n\t        '0.995': 4.07,\n\t        '0.99': 4.66,\n\t        '0.975': 5.63,\n\t        '0.95': 6.57,\n\t        '0.9': 7.79,\n\t        '0.5': 13.34,\n\t        '0.1': 21.06,\n\t        '0.05': 23.68,\n\t        '0.025': 26.12,\n\t        '0.01': 29.14,\n\t        '0.005': 31.32\n\t    },\n\t    '15': {\n\t        '0.995': 4.6,\n\t        '0.99': 5.23,\n\t        '0.975': 6.27,\n\t        '0.95': 7.26,\n\t        '0.9': 8.55,\n\t        '0.5': 14.34,\n\t        '0.1': 22.31,\n\t        '0.05': 25,\n\t        '0.025': 27.49,\n\t        '0.01': 30.58,\n\t        '0.005': 32.8\n\t    },\n\t    '16': {\n\t        '0.995': 5.14,\n\t        '0.99': 5.81,\n\t        '0.975': 6.91,\n\t        '0.95': 7.96,\n\t        '0.9': 9.31,\n\t        '0.5': 15.34,\n\t        '0.1': 23.54,\n\t        '0.05': 26.3,\n\t        '0.025': 28.85,\n\t        '0.01': 32,\n\t        '0.005': 34.27\n\t    },\n\t    '17': {\n\t        '0.995': 5.7,\n\t        '0.99': 6.41,\n\t        '0.975': 7.56,\n\t        '0.95': 8.67,\n\t        '0.9': 10.09,\n\t        '0.5': 16.34,\n\t        '0.1': 24.77,\n\t        '0.05': 27.59,\n\t        '0.025': 30.19,\n\t        '0.01': 33.41,\n\t        '0.005': 35.72\n\t    },\n\t    '18': {\n\t        '0.995': 6.26,\n\t        '0.99': 7.01,\n\t        '0.975': 8.23,\n\t        '0.95': 9.39,\n\t        '0.9': 10.87,\n\t        '0.5': 17.34,\n\t        '0.1': 25.99,\n\t        '0.05': 28.87,\n\t        '0.025': 31.53,\n\t        '0.01': 34.81,\n\t        '0.005': 37.16\n\t    },\n\t    '19': {\n\t        '0.995': 6.84,\n\t        '0.99': 7.63,\n\t        '0.975': 8.91,\n\t        '0.95': 10.12,\n\t        '0.9': 11.65,\n\t        '0.5': 18.34,\n\t        '0.1': 27.2,\n\t        '0.05': 30.14,\n\t        '0.025': 32.85,\n\t        '0.01': 36.19,\n\t        '0.005': 38.58\n\t    },\n\t    '20': {\n\t        '0.995': 7.43,\n\t        '0.99': 8.26,\n\t        '0.975': 9.59,\n\t        '0.95': 10.85,\n\t        '0.9': 12.44,\n\t        '0.5': 19.34,\n\t        '0.1': 28.41,\n\t        '0.05': 31.41,\n\t        '0.025': 34.17,\n\t        '0.01': 37.57,\n\t        '0.005': 40\n\t    },\n\t    '21': {\n\t        '0.995': 8.03,\n\t        '0.99': 8.9,\n\t        '0.975': 10.28,\n\t        '0.95': 11.59,\n\t        '0.9': 13.24,\n\t        '0.5': 20.34,\n\t        '0.1': 29.62,\n\t        '0.05': 32.67,\n\t        '0.025': 35.48,\n\t        '0.01': 38.93,\n\t        '0.005': 41.4\n\t    },\n\t    '22': {\n\t        '0.995': 8.64,\n\t        '0.99': 9.54,\n\t        '0.975': 10.98,\n\t        '0.95': 12.34,\n\t        '0.9': 14.04,\n\t        '0.5': 21.34,\n\t        '0.1': 30.81,\n\t        '0.05': 33.92,\n\t        '0.025': 36.78,\n\t        '0.01': 40.29,\n\t        '0.005': 42.8\n\t    },\n\t    '23': {\n\t        '0.995': 9.26,\n\t        '0.99': 10.2,\n\t        '0.975': 11.69,\n\t        '0.95': 13.09,\n\t        '0.9': 14.85,\n\t        '0.5': 22.34,\n\t        '0.1': 32.01,\n\t        '0.05': 35.17,\n\t        '0.025': 38.08,\n\t        '0.01': 41.64,\n\t        '0.005': 44.18\n\t    },\n\t    '24': {\n\t        '0.995': 9.89,\n\t        '0.99': 10.86,\n\t        '0.975': 12.4,\n\t        '0.95': 13.85,\n\t        '0.9': 15.66,\n\t        '0.5': 23.34,\n\t        '0.1': 33.2,\n\t        '0.05': 36.42,\n\t        '0.025': 39.36,\n\t        '0.01': 42.98,\n\t        '0.005': 45.56\n\t    },\n\t    '25': {\n\t        '0.995': 10.52,\n\t        '0.99': 11.52,\n\t        '0.975': 13.12,\n\t        '0.95': 14.61,\n\t        '0.9': 16.47,\n\t        '0.5': 24.34,\n\t        '0.1': 34.28,\n\t        '0.05': 37.65,\n\t        '0.025': 40.65,\n\t        '0.01': 44.31,\n\t        '0.005': 46.93\n\t    },\n\t    '26': {\n\t        '0.995': 11.16,\n\t        '0.99': 12.2,\n\t        '0.975': 13.84,\n\t        '0.95': 15.38,\n\t        '0.9': 17.29,\n\t        '0.5': 25.34,\n\t        '0.1': 35.56,\n\t        '0.05': 38.89,\n\t        '0.025': 41.92,\n\t        '0.01': 45.64,\n\t        '0.005': 48.29\n\t    },\n\t    '27': {\n\t        '0.995': 11.81,\n\t        '0.99': 12.88,\n\t        '0.975': 14.57,\n\t        '0.95': 16.15,\n\t        '0.9': 18.11,\n\t        '0.5': 26.34,\n\t        '0.1': 36.74,\n\t        '0.05': 40.11,\n\t        '0.025': 43.19,\n\t        '0.01': 46.96,\n\t        '0.005': 49.65\n\t    },\n\t    '28': {\n\t        '0.995': 12.46,\n\t        '0.99': 13.57,\n\t        '0.975': 15.31,\n\t        '0.95': 16.93,\n\t        '0.9': 18.94,\n\t        '0.5': 27.34,\n\t        '0.1': 37.92,\n\t        '0.05': 41.34,\n\t        '0.025': 44.46,\n\t        '0.01': 48.28,\n\t        '0.005': 50.99\n\t    },\n\t    '29': {\n\t        '0.995': 13.12,\n\t        '0.99': 14.26,\n\t        '0.975': 16.05,\n\t        '0.95': 17.71,\n\t        '0.9': 19.77,\n\t        '0.5': 28.34,\n\t        '0.1': 39.09,\n\t        '0.05': 42.56,\n\t        '0.025': 45.72,\n\t        '0.01': 49.59,\n\t        '0.005': 52.34\n\t    },\n\t    '30': {\n\t        '0.995': 13.79,\n\t        '0.99': 14.95,\n\t        '0.975': 16.79,\n\t        '0.95': 18.49,\n\t        '0.9': 20.6,\n\t        '0.5': 29.34,\n\t        '0.1': 40.26,\n\t        '0.05': 43.77,\n\t        '0.025': 46.98,\n\t        '0.01': 50.89,\n\t        '0.005': 53.67\n\t    },\n\t    '40': {\n\t        '0.995': 20.71,\n\t        '0.99': 22.16,\n\t        '0.975': 24.43,\n\t        '0.95': 26.51,\n\t        '0.9': 29.05,\n\t        '0.5': 39.34,\n\t        '0.1': 51.81,\n\t        '0.05': 55.76,\n\t        '0.025': 59.34,\n\t        '0.01': 63.69,\n\t        '0.005': 66.77\n\t    },\n\t    '50': {\n\t        '0.995': 27.99,\n\t        '0.99': 29.71,\n\t        '0.975': 32.36,\n\t        '0.95': 34.76,\n\t        '0.9': 37.69,\n\t        '0.5': 49.33,\n\t        '0.1': 63.17,\n\t        '0.05': 67.5,\n\t        '0.025': 71.42,\n\t        '0.01': 76.15,\n\t        '0.005': 79.49\n\t    },\n\t    '60': {\n\t        '0.995': 35.53,\n\t        '0.99': 37.48,\n\t        '0.975': 40.48,\n\t        '0.95': 43.19,\n\t        '0.9': 46.46,\n\t        '0.5': 59.33,\n\t        '0.1': 74.4,\n\t        '0.05': 79.08,\n\t        '0.025': 83.3,\n\t        '0.01': 88.38,\n\t        '0.005': 91.95\n\t    },\n\t    '70': {\n\t        '0.995': 43.28,\n\t        '0.99': 45.44,\n\t        '0.975': 48.76,\n\t        '0.95': 51.74,\n\t        '0.9': 55.33,\n\t        '0.5': 69.33,\n\t        '0.1': 85.53,\n\t        '0.05': 90.53,\n\t        '0.025': 95.02,\n\t        '0.01': 100.42,\n\t        '0.005': 104.22\n\t    },\n\t    '80': {\n\t        '0.995': 51.17,\n\t        '0.99': 53.54,\n\t        '0.975': 57.15,\n\t        '0.95': 60.39,\n\t        '0.9': 64.28,\n\t        '0.5': 79.33,\n\t        '0.1': 96.58,\n\t        '0.05': 101.88,\n\t        '0.025': 106.63,\n\t        '0.01': 112.33,\n\t        '0.005': 116.32\n\t    },\n\t    '90': {\n\t        '0.995': 59.2,\n\t        '0.99': 61.75,\n\t        '0.975': 65.65,\n\t        '0.95': 69.13,\n\t        '0.9': 73.29,\n\t        '0.5': 89.33,\n\t        '0.1': 107.57,\n\t        '0.05': 113.14,\n\t        '0.025': 118.14,\n\t        '0.01': 124.12,\n\t        '0.005': 128.3\n\t    },\n\t    '100': {\n\t        '0.995': 67.33,\n\t        '0.99': 70.06,\n\t        '0.975': 74.22,\n\t        '0.95': 77.93,\n\t        '0.9': 82.36,\n\t        '0.5': 99.33,\n\t        '0.1': 118.5,\n\t        '0.05': 124.34,\n\t        '0.025': 129.56,\n\t        '0.01': 135.81,\n\t        '0.005': 140.17\n\t    }\n\t};\n\t\n\texports.default = chiSquaredTable;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** statistical.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f3b3ad9912a2dba13f3c\n **/","'use strict';\n\nimport hook from './utils/hook';\nimport cacheManager from './utils/cacheManager';\nimport Validator from './utils/validator';\nimport StatisticalMethod from './methods/statistical.method';\n\n\nclass Statistical {\n    constructor() {\n        this._validator = new Validator();\n        this._settings = {\n            cache: {\n                enabled: true,\n                rootElementCount: 10,\n                subElementCount: 30\n            }\n        };\n    }\n\n    /**\n     * Return settings used in statistical class.\n     *\n     * @returns {*}\n     */\n    get settings() {\n        return this._settings;\n    }\n\n    /**\n     * Allow to updates statistical settings.\n     *\n     * @param {*|object} options\n     */\n    set settings(options) {\n        this._settings = {\n            cache: {\n                enabled: options.cache.enabled,\n                rootElementCount: options.cache.rootElementCount || this._settings.cache.rootElementCount,\n                subElementCount: options.cache.subElementCount || this._settings.cache.subElementCount\n            }\n        };\n        cacheManager.settings = this._settings.cache;\n    }\n\n    get methods() {\n        return hook.cache(new StatisticalMethod(), cacheManager);\n    }\n}\n\nconst statistical = new Statistical();\nexport default statistical;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.js\n **/","'use strict';\n\nclass Hook {\n    constructor() {}\n\n    /**\n     * Create a proxy to wrap a class method and intercept each call.\n     *\n     * @param {object} target\n     * @param {object} cacheManager\n     */\n    cache(target, cacheManager) {\n        return new Proxy(target, {\n            get: (target, property) => {\n                if (property in target && typeof target[property] === 'function') {\n                    return (...args) => {\n                        let res;\n                        if (cacheManager.settings.enabled) {\n                            const cache = cacheManager.find(property, args[0]);\n                            if (cache) return cache.result;\n\n                            res = target[property](...args);\n                            cacheManager.update(property, {dataSet: args[0], result: res});\n                        } else {\n                            res = target[property](...args);\n                        }\n\n                        return res;\n                    };\n                } else {\n                    return Reflect.get(target, property);\n                }\n            }\n        });\n    }\n}\n\nconst hook = new Hook();\nexport default hook;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/hook.js\n **/","'use strict';\n\nimport Validator from './validator';\n\nclass CacheManager {\n    constructor() {\n        this._validator = new Validator();\n        this._cache = {};\n        this._settings = {\n            enabled: true,\n            rootElementCount: 10,\n            subElementCount: 30\n        };\n    }\n\n    /**\n     * Return CacheManager settings.\n     *\n     * @returns {{maxLength: number}|*}\n     */\n    get settings() {\n        return this._settings;\n    }\n\n    /**\n     * Return the entire cache\n     *\n     * @returns {{}|*}\n     */\n    get cache() {\n        return this._cache;\n    }\n\n    /**\n     * Update existing settings to manage cache.\n     *\n     * @param {*} options\n     */\n    set settings(options) {\n        this._settings = {\n            enabled: options.enabled,\n            rootElementCount: options.rootElementCount || this._settings.rootElementCount,\n            subElementCount: options.subElementCount || this._settings.subElementCount\n        };\n    }\n\n    /**\n     * Update the cache saved with new results.\n     *\n     * @param {string} method\n     * @param {Object} options\n     */\n    update(method, options) {\n        if (Object.keys(this._cache).length >= this._settings.rootElementCount) delete this._cache[Object.keys(this._cache)[0]];\n        if (this._cache[method] && this._cache[method].length >= this._settings.subElementCount) this._cache[method].splice(0, 1);\n\n        this._cache[method] = this._cache[method] || [];\n        this._cache[method].push({\n            date: new Date().getTime(),\n            dataSet: options.dataSet,\n            result: options.result\n        });\n    }\n\n    /**\n     * Find an existing dataSet in the cache and return it.\n     *\n     * @param {String} method\n     * @param {Array} dataSet\n     * @returns {Object}\n     */\n    find(method, dataSet) {\n        const cache = this._cache[method] || [];\n\n        let res = null;\n        cache.some(v => {\n            if (v.dataSet === dataSet) {\n                res = v;\n                return true;\n            }\n\n            return false;\n        });\n\n        return res;\n    }\n\n    /**\n     * Reset the cache to be empty.\n     */\n    reset() {\n        this._cache = {};\n    }\n}\n\nconst cacheManager = new CacheManager();\nexport default cacheManager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/cacheManager.js\n **/","'use strict';\n\nclass Validator {\n    constructor() {}\n\n    /**\n     * Valid a value with rules given, if the rules are not respected throw an error.\n     *\n     * @param {string} parameterName\n     * @param {*} value\n     * @param {Array} ruless\n     */\n    validate(parameterName, value, rules) {\n        if (typeof value === 'undefined') throw new Error('Missing parameter ' + parameterName);\n\n        rules.map(r => {\n            switch (r) {\n                case 'isArray':\n                    if (!Array.isArray(value)) throw new Error(`Parameter ${parameterName} must be an array`);\n                    break;\n                case 'isNumber':\n                    if (typeof value !== 'number') throw new Error(`Parameter ${parameterName} must be a number`);\n                    break;\n                case 'isString':\n                    if (typeof value !== 'string') throw new Error(`Parameter ${parameterName} must be a string`);\n                    break;\n                case 'isFunction':\n                    if (typeof value !== 'function') throw new Error(`Parameter ${parameterName} must be a function`);\n                    break;\n                case 'length > 0':\n                    if (value.length === 0) throw new Error(`Parameter ${parameterName} must have more than 0 values`);\n                    break;\n                case 'positive':\n                    if (value < 0) throw new Error(`Parameter ${parameterName} must be positive`);\n                    break;\n                case 'strictlyPositive':\n                    if (value <= 0) throw new Error(`Parameter ${parameterName} must be strictly positive`);\n                    break;\n                case 'length =':\n                    if (value[0].length !== value[1].length) throw new Error(`Parameter ${parameterName} must have the same number of values`);\n                    break;\n                default:\n                    if (Array.isArray(r)) {\n                        const hasOnlyNumbers = !(r.map(v => typeof v === 'number').includes(false));\n                        if (hasOnlyNumbers) {\n                            if (r.length === 2) {\n                                if (value < r[0] || value > r[1]) throw new Error(`Parameter ${parameterName} must fall between ${r[0]} and ${r[1]}`);\n                            }\n                        }\n                    } else {\n                        throw new Error('Rule not implemented : ' + r);\n                    }\n            }\n        });\n    }\n}\n\nexport default Validator;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/validator.js\n **/","'use strict';\n\nimport Validator from '../utils/validator';\nimport epsilon from '../constante/epsilon';\nimport chiSquaredTable from '../constante/chiSquaredTable';\n\nclass StatisticalMethod {\n    constructor() {\n        this._validator = new Validator();\n        this._chiSquaredProbTable = chiSquaredTable;\n        this._epsilon = epsilon;\n    }\n\n    /**\n     * Return table of chi squared prob.\n     *\n     * @returns {*}\n     */\n    get chiSquaredProbTable() {\n        return this._chiSquaredProbTable;\n    }\n\n    /**\n     * Return the smallest value of the sample.\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    min(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        return sample.sort((a, b) => a - b)[0];\n    }\n\n    /**\n     * Return the biggest value of the sample.\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    max(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        return sample.sort((a, b) => a + b)[0];\n    }\n\n\n    /**\n     * The [Sum](https://en.wikipedia.org/wiki/Sum).\n     *\n     * @param sample\n     * @returns {*}\n     */\n    sum(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        return sample.reduce((accumulator, current) => accumulator + current, 0);\n    }\n\n    /**\n     * The [Median](https://en.wikipedia.org/wiki/Median).\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    median(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\n        const middle = Math.floor(sample.length / 2);\n        const isEven = sample.length % 2 === 0;\n\n        sample = sample.sort((a, b) => a - b);\n\n        return isEven ? (sample[middle - 1] + sample[middle]) / 2 : sample[middle];\n    }\n\n    /**\n     * The [Mode](https://en.wikipedia.org/wiki/Mode).\n     *\n     * @param {Array} sample\n     * @returns {*}\n     */\n    mode(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\n        const counter = {};\n        let mode = [];\n        let max = 0;\n\n        sample.map((value, index) => {\n            if (!(sample[index] in counter)) counter[sample[index]] = 0;\n\n            counter[sample[index]]++;\n\n            if (counter[sample[index]] === max) mode.push(sample[index]);\n            if (counter[sample[index]] > max) {\n                max = counter[sample[index]];\n                mode = [sample[index]];\n            }\n        });\n\n        return mode.length > 1 ? mode : mode[0];\n    }\n\n    /**\n     * The [Mean](https://en.wikipedia.org/wiki/Mean).\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    mean(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\n        return this.sum(sample) / sample.length;\n    }\n\n    /**\n     * The [Variance](https://en.wikipedia.org/wiki/Variance).\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    variance(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\n        const avg = this.mean(sample);\n        const n = sample.length;\n\n        return this.sum(sample.map(value => Math.pow(value - avg, 2))) / n;\n    }\n\n    /**\n     * The [Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation).\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    stdDeviation(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        return Math.sqrt(this.variance(sample));\n    }\n\n    /**\n     * The [Quantile](http://en.wikipedia.org/wiki/Quantile).\n     *\n     * @param {Array} sample\n     * @param {number} index\n     * @returns {Array}\n     */\n    quantile(sample, index) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        this._validator.validate('index', index, ['isNumber', [0, 1]]);\n\n        const sortedSample = sample.sort((a, b) => a - b);\n\n        return sortedSample[Math.ceil((sample.length * index) - 1)];\n    }\n\n    /**\n     * The [Percentile](https://en.wikipedia.org/wiki/Percentile).\n     *\n     * @param {Array} sample\n     * @param {number} index\n     * @returns {Array}\n     */\n    percentile(sample, index) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        this._validator.validate('index', index, ['isNumber', [0, 100]]);\n\n        const sortedSample = sample.sort((a, b) => a - b);\n        return sortedSample[Math.ceil((index / 100) * sample.length)];\n    }\n\n    /**\n     * Return the entire result of descriptives statistics above.\n     *\n     * @param {Array} sample\n     * @returns {{min: number, max: number, sum: *, median: number, mode: *, mean: number, variance: number, stdDeviation: number, quantile: Array}}\n     */\n    summary(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\n        return {\n            min: this.min(sample),\n            max: this.max(sample),\n            sum: this.sum(sample),\n            median: this.median(sample),\n            mode: this.mode(sample),\n            mean: this.mean(sample),\n            variance: this.variance(sample),\n            stdDeviation: this.stdDeviation(sample),\n            quantile: {\n                q1: this.quantile(sample, 0.25),\n                q3: this.quantile(sample, 0.75)\n            }\n        };\n    }\n\n    /**\n     * The [Factorial](https://en.wikipedia.org/wiki/Factorial).\n     *\n     * @param {number} n\n     * @returns {number}\n     */\n    factorial(n) {\n        this._validator.validate('n', n, ['isNumber', 'positive']);\n\n        let factorialResult = 1;\n        for (let i = 2; i <= n; i++) {\n            factorialResult *= i;\n        }\n\n        return factorialResult;\n    }\n\n    /**\n     * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean).\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    geometricMean(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        return Math.pow(sample.reduce((accumulator, current) => accumulator * current, 1), 1 / sample.length);\n    }\n\n    /**\n     * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean).\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    harmonicMean(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        return sample.length / sample.reduce((accumulator, current) => accumulator + (1 / current), 0);\n    }\n\n    /**\n     * The [Interquartile range](http://en.wikipedia.org/wiki/Interquartile_range)\n     *\n     * @param sample\n     * @returns {number}\n     */\n    interQuartileRange(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        return this.quantile(sample, 0.75) - this.quantile(sample, 0.25);\n    }\n\n    /**\n     * The [Variance](https://en.wikipedia.org/wiki/Harmonic_mean).\n     * The [Biais](https://fr.wikipedia.org/wiki/Estimateur_(statistique)#Biais).\n     *\n     * Non biased variance\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    sampleVariance(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n\n        const avg = this.mean(sample);\n        const n = sample.length - 1;\n\n        return this.sum(sample.map(value => Math.pow(value - avg, 2))) / n;\n    }\n\n    /**\n     * The [Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation).\n     * The [Biais](https://fr.wikipedia.org/wiki/Estimateur_(statistique)#Biais).\n     *\n     * Non biased std deviation\n     *\n     * @param {Array} sample\n     * @returns {number}\n     */\n    sampleStdDeviation(sample) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        return Math.sqrt(this.sampleVariance(sample));\n    }\n\n    /**\n     * The [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\n     *\n     * @param {Array} sample1\n     * @param {Array} sample2\n     * @returns {number}\n     */\n    covariance(sample1, sample2) {\n        this._validator.validate('sample1', sample1, ['isArray', 'length > 0']);\n        this._validator.validate('sample2', sample2, ['isArray', 'length > 0']);\n        this._validator.validate('sample1 and sample2', [sample1, sample2], ['length =']);\n\n        const meanX = this.mean(sample1);\n        const meanY = this.mean(sample2);\n\n        const numerator = sample1.reduce((accumulator, current, i) => {\n            accumulator += (current - meanX) * (sample2[i] - meanY);\n            return accumulator;\n        }, 0);\n\n        const besselsCorrection = sample1.length - 1;\n\n        return numerator / besselsCorrection;\n    }\n\n    /**\n     * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution).\n     *\n     * @param {number} trials\n     * @param {number} probability\n     * @returns {{}}\n     */\n    binomial(trials, probability) {\n        this._validator.validate('trials', trials, ['isNumber']);\n        this._validator.validate('probability', probability, ['isNumber', [0, 1]]);\n\n        let x = 0;\n        let cumulativeProbability = 0;\n        const cells = {};\n\n        do {\n            cells[x] = this.factorial(trials) / (this.factorial(x) * this.factorial(trials - x)) * (Math.pow(probability, x) * Math.pow(1 - probability, trials - x));\n            cumulativeProbability += cells[x];\n            x++;\n        } while (cumulativeProbability < 1 - this._epsilon);\n\n        return cells;\n    }\n\n    /**\n     * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution).\n     *\n     * @param {number} p\n     * @returns {Object}\n     */\n    bernoulli(p) {\n        this._validator.validate('p', p, ['isNumber', [0, 1]]);\n        return this.binomial(1, p);\n    }\n\n    /**\n     * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution).\n     *\n     * @param {number} lambda\n     * @returns {{}}\n     */\n    poisson(lambda) {\n        this._validator.validate('lambda', lambda, ['strictlyPositive']);\n\n        let x = 0;\n        let cumulativeProbability = 0;\n        let cells = {};\n\n        do {\n            cells[x] = (Math.pow(Math.E, -lambda) * Math.pow(lambda, x)) / this.factorial(x);\n            cumulativeProbability += cells[x];\n            x++;\n        } while (cumulativeProbability < 1 - this._epsilon);\n\n        return cells;\n    }\n\n    /**\n     * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test).\n     * return if data follow a specified distribution\n     *\n     * @param {Array} sample\n     * @param {Function} distributionType\n     * @param {number} significance\n     * @returns {boolean}\n     *\n     * @exemple\n     * chiSquaredGoodnessOfFit(sample, 'poisson', 0.05)); //= false\n     */\n    chiSquaredGoodnessOfFit(sample, distributionType, significance) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        this._validator.validate('distributionType', distributionType, ['isFunction']);\n        this._validator.validate('significance', significance, ['isNumber', 'positive']);\n\n        /* Generate an array with number of ocurences for each data in sample. */\n        let observedFrequencies = [];\n        observedFrequencies = sample.reduce((accumulator, val) => {\n            if (accumulator[val] === undefined) accumulator[val] = 0;\n            accumulator[val] += 1;\n            return accumulator;\n        }, []).filter(v => v !== undefined);\n\n        /* number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test. */\n        /* Lose one degree of freedom for estimating `lambda` from the sample data. */\n        const sampleMean = this.mean(sample);\n\n        /* The hypothesized distribution. Generate the hypothesized distribution. */\n        const hypothesizedDistribution = distributionType(sampleMean);\n\n        /* Create an array holding a histogram of expected data given the */\n        /* sample size and hypothesized distribution. */\n        let expectedFrequencies = [];\n        expectedFrequencies = Object.entries(hypothesizedDistribution).reduce((accumulator, current, i) => {\n            if (observedFrequencies[i]) accumulator[i] = current[1] * sample.length;\n            return accumulator;\n        }, []);\n\n        /* Concat frequencies < 3 with the previous one */\n        expectedFrequencies = Object.entries(expectedFrequencies).reduceRight((previous, current) => {\n            if (previous[1] < 3) current[1] += previous[1];\n            return current;\n        });\n\n        /* Compute chiSquared value */\n        let chiSquared = 0;\n        chiSquared = Object.entries(observedFrequencies).reduce((accumulator, current, i) => {\n            accumulator += Math.pow((current[1] - expectedFrequencies[i]), 2) / expectedFrequencies[i];\n            return accumulator;\n        }, chiSquared);\n\n        const c = 1;\n        const degreesOfFreedom = Object.keys(observedFrequencies).length - c - 1;\n\n        return this._chiSquaredProbTable[degreesOfFreedom][significance] < chiSquared;\n    }\n\n    /**\n     * The [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test).\n     *\n     * @param {Array} sample\n     * @param {number} mu\n     * @returns {number}\n     */\n    tTestOneSample(sample, mu) {\n        this._validator.validate('sample', sample, ['isArray', 'length > 0']);\n        this._validator.validate('mu', mu, ['isNumber']);\n\n        const mean = this.mean(sample);\n        const sd = this.stdDeviation(sample);\n        const sqrtSampleSize = Math.sqrt(sample.length);\n\n        /* t-value */\n        return (mean - mu) / (sd / sqrtSampleSize);\n    }\n\n    /**\n     * The [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n     *\n     * @param {Array} sample1\n     * @param {Array} sample2\n     * @returns {number}\n     */\n    tTestTwoSample(sample1, sample2) {\n        this._validator.validate('sample1', sample1, ['isArray', 'length > 0']);\n        this._validator.validate('sample2', sample2, ['isArray', 'length > 0']);\n\n        const n = sample1.length;\n        const m = sample2.length;\n        const meanX = this.mean(sample1);\n        const meanY = this.mean(sample2);\n        const sampleVarianceX = this.sampleVariance(sample1);\n        const sampleVarianceY = this.sampleVariance(sample2);\n\n        const weightedVariance = (((n - 1) * sampleVarianceX) + ((m - 1) * sampleVarianceY)) / (n + m - 2);\n\n        /* t-value */\n        return (meanX - meanY) / Math.sqrt(weightedVariance * (1 / (n + 1) / m));\n    }\n\n\n    /**\n     * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n     *\n     * @param {Array<Array<number>>} data\n     * @returns {*}\n     */\n    linearRegression(data) {\n        this._validator.validate('data', data, ['isArray']);\n\n        const dataLength = data.length;\n\n        /* 1 element, the result will be a slope to 0 and an intersect ot the second coordinate elements */\n        if (dataLength === 1) return { slope, intersect: data[0][1] };\n\n        /* Compute all sum, and finally the slope and intersect */\n        let sumX = 0, sumY = 0, sumXX = 0, sumXY = 0;\n\n        data.forEach(element => {\n            sumX += element[0];\n            sumY += element[1];\n\n            sumXX += Math.pow(element[0], 2);\n            sumXY += element[0] * element[1];\n        });\n\n        const slope = ((dataLength * sumXY) - (sumX * sumY)) / ((dataLength * sumXX) - (sumX * sumX));\n        const intersect = (sumY / dataLength) - ((slope * sumX) / dataLength);\n\n        // Return both values as an object.\n        return { slope, intersect };\n    }\n}\n\nexport default StatisticalMethod;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/methods/statistical.method.js\n **/","/**\n * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n * until we're \"close enough\". Epsilon is a very small number: for\n * simple statistics, that number is **0.0001**\n *\n * This is used in calculations like the binomialDistribution, in which\n * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n * it progresses until it is close enough.\n *\n * @type {number}\n */\nconst epsilon = 0.0001;\nexport default epsilon;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/constante/epsilon.js\n **/","'use strict';\n\n/**\n * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution)\n *\n * @type {*}\n */\nconst chiSquaredTable = {\n    '1': {\n        '0.995': 0,\n        '0.99': 0,\n        '0.975': 0,\n        '0.95': 0,\n        '0.9': 0.02,\n        '0.5': 0.45,\n        '0.1': 2.71,\n        '0.05': 3.84,\n        '0.025': 5.02,\n        '0.01': 6.63,\n        '0.005': 7.88\n    },\n    '2': {\n        '0.995': 0.01,\n        '0.99': 0.02,\n        '0.975': 0.05,\n        '0.95': 0.1,\n        '0.9': 0.21,\n        '0.5': 1.39,\n        '0.1': 4.61,\n        '0.05': 5.99,\n        '0.025': 7.38,\n        '0.01': 9.21,\n        '0.005': 10.6\n    },\n    '3': {\n        '0.995': 0.07,\n        '0.99': 0.11,\n        '0.975': 0.22,\n        '0.95': 0.35,\n        '0.9': 0.58,\n        '0.5': 2.37,\n        '0.1': 6.25,\n        '0.05': 7.81,\n        '0.025': 9.35,\n        '0.01': 11.34,\n        '0.005': 12.84\n    },\n    '4': {\n        '0.995': 0.21,\n        '0.99': 0.3,\n        '0.975': 0.48,\n        '0.95': 0.71,\n        '0.9': 1.06,\n        '0.5': 3.36,\n        '0.1': 7.78,\n        '0.05': 9.49,\n        '0.025': 11.14,\n        '0.01': 13.28,\n        '0.005': 14.86\n    },\n    '5': {\n        '0.995': 0.41,\n        '0.99': 0.55,\n        '0.975': 0.83,\n        '0.95': 1.15,\n        '0.9': 1.61,\n        '0.5': 4.35,\n        '0.1': 9.24,\n        '0.05': 11.07,\n        '0.025': 12.83,\n        '0.01': 15.09,\n        '0.005': 16.75\n    },\n    '6': {\n        '0.995': 0.68,\n        '0.99': 0.87,\n        '0.975': 1.24,\n        '0.95': 1.64,\n        '0.9': 2.2,\n        '0.5': 5.35,\n        '0.1': 10.65,\n        '0.05': 12.59,\n        '0.025': 14.45,\n        '0.01': 16.81,\n        '0.005': 18.55\n    },\n    '7': {\n        '0.995': 0.99,\n        '0.99': 1.25,\n        '0.975': 1.69,\n        '0.95': 2.17,\n        '0.9': 2.83,\n        '0.5': 6.35,\n        '0.1': 12.02,\n        '0.05': 14.07,\n        '0.025': 16.01,\n        '0.01': 18.48,\n        '0.005': 20.28\n    },\n    '8': {\n        '0.995': 1.34,\n        '0.99': 1.65,\n        '0.975': 2.18,\n        '0.95': 2.73,\n        '0.9': 3.49,\n        '0.5': 7.34,\n        '0.1': 13.36,\n        '0.05': 15.51,\n        '0.025': 17.53,\n        '0.01': 20.09,\n        '0.005': 21.96\n    },\n    '9': {\n        '0.995': 1.73,\n        '0.99': 2.09,\n        '0.975': 2.7,\n        '0.95': 3.33,\n        '0.9': 4.17,\n        '0.5': 8.34,\n        '0.1': 14.68,\n        '0.05': 16.92,\n        '0.025': 19.02,\n        '0.01': 21.67,\n        '0.005': 23.59\n    },\n    '10': {\n        '0.995': 2.16,\n        '0.99': 2.56,\n        '0.975': 3.25,\n        '0.95': 3.94,\n        '0.9': 4.87,\n        '0.5': 9.34,\n        '0.1': 15.99,\n        '0.05': 18.31,\n        '0.025': 20.48,\n        '0.01': 23.21,\n        '0.005': 25.19\n    },\n    '11': {\n        '0.995': 2.6,\n        '0.99': 3.05,\n        '0.975': 3.82,\n        '0.95': 4.57,\n        '0.9': 5.58,\n        '0.5': 10.34,\n        '0.1': 17.28,\n        '0.05': 19.68,\n        '0.025': 21.92,\n        '0.01': 24.72,\n        '0.005': 26.76\n    },\n    '12': {\n        '0.995': 3.07,\n        '0.99': 3.57,\n        '0.975': 4.4,\n        '0.95': 5.23,\n        '0.9': 6.3,\n        '0.5': 11.34,\n        '0.1': 18.55,\n        '0.05': 21.03,\n        '0.025': 23.34,\n        '0.01': 26.22,\n        '0.005': 28.3\n    },\n    '13': {\n        '0.995': 3.57,\n        '0.99': 4.11,\n        '0.975': 5.01,\n        '0.95': 5.89,\n        '0.9': 7.04,\n        '0.5': 12.34,\n        '0.1': 19.81,\n        '0.05': 22.36,\n        '0.025': 24.74,\n        '0.01': 27.69,\n        '0.005': 29.82\n    },\n    '14': {\n        '0.995': 4.07,\n        '0.99': 4.66,\n        '0.975': 5.63,\n        '0.95': 6.57,\n        '0.9': 7.79,\n        '0.5': 13.34,\n        '0.1': 21.06,\n        '0.05': 23.68,\n        '0.025': 26.12,\n        '0.01': 29.14,\n        '0.005': 31.32\n    },\n    '15': {\n        '0.995': 4.6,\n        '0.99': 5.23,\n        '0.975': 6.27,\n        '0.95': 7.26,\n        '0.9': 8.55,\n        '0.5': 14.34,\n        '0.1': 22.31,\n        '0.05': 25,\n        '0.025': 27.49,\n        '0.01': 30.58,\n        '0.005': 32.8\n    },\n    '16': {\n        '0.995': 5.14,\n        '0.99': 5.81,\n        '0.975': 6.91,\n        '0.95': 7.96,\n        '0.9': 9.31,\n        '0.5': 15.34,\n        '0.1': 23.54,\n        '0.05': 26.3,\n        '0.025': 28.85,\n        '0.01': 32,\n        '0.005': 34.27\n    },\n    '17': {\n        '0.995': 5.7,\n        '0.99': 6.41,\n        '0.975': 7.56,\n        '0.95': 8.67,\n        '0.9': 10.09,\n        '0.5': 16.34,\n        '0.1': 24.77,\n        '0.05': 27.59,\n        '0.025': 30.19,\n        '0.01': 33.41,\n        '0.005': 35.72\n    },\n    '18': {\n        '0.995': 6.26,\n        '0.99': 7.01,\n        '0.975': 8.23,\n        '0.95': 9.39,\n        '0.9': 10.87,\n        '0.5': 17.34,\n        '0.1': 25.99,\n        '0.05': 28.87,\n        '0.025': 31.53,\n        '0.01': 34.81,\n        '0.005': 37.16\n    },\n    '19': {\n        '0.995': 6.84,\n        '0.99': 7.63,\n        '0.975': 8.91,\n        '0.95': 10.12,\n        '0.9': 11.65,\n        '0.5': 18.34,\n        '0.1': 27.2,\n        '0.05': 30.14,\n        '0.025': 32.85,\n        '0.01': 36.19,\n        '0.005': 38.58\n    },\n    '20': {\n        '0.995': 7.43,\n        '0.99': 8.26,\n        '0.975': 9.59,\n        '0.95': 10.85,\n        '0.9': 12.44,\n        '0.5': 19.34,\n        '0.1': 28.41,\n        '0.05': 31.41,\n        '0.025': 34.17,\n        '0.01': 37.57,\n        '0.005': 40\n    },\n    '21': {\n        '0.995': 8.03,\n        '0.99': 8.9,\n        '0.975': 10.28,\n        '0.95': 11.59,\n        '0.9': 13.24,\n        '0.5': 20.34,\n        '0.1': 29.62,\n        '0.05': 32.67,\n        '0.025': 35.48,\n        '0.01': 38.93,\n        '0.005': 41.4\n    },\n    '22': {\n        '0.995': 8.64,\n        '0.99': 9.54,\n        '0.975': 10.98,\n        '0.95': 12.34,\n        '0.9': 14.04,\n        '0.5': 21.34,\n        '0.1': 30.81,\n        '0.05': 33.92,\n        '0.025': 36.78,\n        '0.01': 40.29,\n        '0.005': 42.8\n    },\n    '23': {\n        '0.995': 9.26,\n        '0.99': 10.2,\n        '0.975': 11.69,\n        '0.95': 13.09,\n        '0.9': 14.85,\n        '0.5': 22.34,\n        '0.1': 32.01,\n        '0.05': 35.17,\n        '0.025': 38.08,\n        '0.01': 41.64,\n        '0.005': 44.18\n    },\n    '24': {\n        '0.995': 9.89,\n        '0.99': 10.86,\n        '0.975': 12.4,\n        '0.95': 13.85,\n        '0.9': 15.66,\n        '0.5': 23.34,\n        '0.1': 33.2,\n        '0.05': 36.42,\n        '0.025': 39.36,\n        '0.01': 42.98,\n        '0.005': 45.56\n    },\n    '25': {\n        '0.995': 10.52,\n        '0.99': 11.52,\n        '0.975': 13.12,\n        '0.95': 14.61,\n        '0.9': 16.47,\n        '0.5': 24.34,\n        '0.1': 34.28,\n        '0.05': 37.65,\n        '0.025': 40.65,\n        '0.01': 44.31,\n        '0.005': 46.93\n    },\n    '26': {\n        '0.995': 11.16,\n        '0.99': 12.2,\n        '0.975': 13.84,\n        '0.95': 15.38,\n        '0.9': 17.29,\n        '0.5': 25.34,\n        '0.1': 35.56,\n        '0.05': 38.89,\n        '0.025': 41.92,\n        '0.01': 45.64,\n        '0.005': 48.29\n    },\n    '27': {\n        '0.995': 11.81,\n        '0.99': 12.88,\n        '0.975': 14.57,\n        '0.95': 16.15,\n        '0.9': 18.11,\n        '0.5': 26.34,\n        '0.1': 36.74,\n        '0.05': 40.11,\n        '0.025': 43.19,\n        '0.01': 46.96,\n        '0.005': 49.65\n    },\n    '28': {\n        '0.995': 12.46,\n        '0.99': 13.57,\n        '0.975': 15.31,\n        '0.95': 16.93,\n        '0.9': 18.94,\n        '0.5': 27.34,\n        '0.1': 37.92,\n        '0.05': 41.34,\n        '0.025': 44.46,\n        '0.01': 48.28,\n        '0.005': 50.99\n    },\n    '29': {\n        '0.995': 13.12,\n        '0.99': 14.26,\n        '0.975': 16.05,\n        '0.95': 17.71,\n        '0.9': 19.77,\n        '0.5': 28.34,\n        '0.1': 39.09,\n        '0.05': 42.56,\n        '0.025': 45.72,\n        '0.01': 49.59,\n        '0.005': 52.34\n    },\n    '30': {\n        '0.995': 13.79,\n        '0.99': 14.95,\n        '0.975': 16.79,\n        '0.95': 18.49,\n        '0.9': 20.6,\n        '0.5': 29.34,\n        '0.1': 40.26,\n        '0.05': 43.77,\n        '0.025': 46.98,\n        '0.01': 50.89,\n        '0.005': 53.67\n    },\n    '40': {\n        '0.995': 20.71,\n        '0.99': 22.16,\n        '0.975': 24.43,\n        '0.95': 26.51,\n        '0.9': 29.05,\n        '0.5': 39.34,\n        '0.1': 51.81,\n        '0.05': 55.76,\n        '0.025': 59.34,\n        '0.01': 63.69,\n        '0.005': 66.77\n    },\n    '50': {\n        '0.995': 27.99,\n        '0.99': 29.71,\n        '0.975': 32.36,\n        '0.95': 34.76,\n        '0.9': 37.69,\n        '0.5': 49.33,\n        '0.1': 63.17,\n        '0.05': 67.5,\n        '0.025': 71.42,\n        '0.01': 76.15,\n        '0.005': 79.49\n    },\n    '60': {\n        '0.995': 35.53,\n        '0.99': 37.48,\n        '0.975': 40.48,\n        '0.95': 43.19,\n        '0.9': 46.46,\n        '0.5': 59.33,\n        '0.1': 74.4,\n        '0.05': 79.08,\n        '0.025': 83.3,\n        '0.01': 88.38,\n        '0.005': 91.95\n    },\n    '70': {\n        '0.995': 43.28,\n        '0.99': 45.44,\n        '0.975': 48.76,\n        '0.95': 51.74,\n        '0.9': 55.33,\n        '0.5': 69.33,\n        '0.1': 85.53,\n        '0.05': 90.53,\n        '0.025': 95.02,\n        '0.01': 100.42,\n        '0.005': 104.22\n    },\n    '80': {\n        '0.995': 51.17,\n        '0.99': 53.54,\n        '0.975': 57.15,\n        '0.95': 60.39,\n        '0.9': 64.28,\n        '0.5': 79.33,\n        '0.1': 96.58,\n        '0.05': 101.88,\n        '0.025': 106.63,\n        '0.01': 112.33,\n        '0.005': 116.32\n    },\n    '90': {\n        '0.995': 59.2,\n        '0.99': 61.75,\n        '0.975': 65.65,\n        '0.95': 69.13,\n        '0.9': 73.29,\n        '0.5': 89.33,\n        '0.1': 107.57,\n        '0.05': 113.14,\n        '0.025': 118.14,\n        '0.01': 124.12,\n        '0.005': 128.3\n    },\n    '100': {\n        '0.995': 67.33,\n        '0.99': 70.06,\n        '0.975': 74.22,\n        '0.95': 77.93,\n        '0.9': 82.36,\n        '0.5': 99.33,\n        '0.1': 118.5,\n        '0.05': 124.34,\n        '0.025': 129.56,\n        '0.01': 135.81,\n        '0.005': 140.17\n    }\n};\n\nexport default chiSquaredTable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/constante/chiSquaredTable.js\n **/"],"sourceRoot":""}