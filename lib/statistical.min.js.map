{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///statistical.min.js","webpack:///webpack/bootstrap 19c3433b9898baae32ca","webpack:///./src/statistical.js","webpack:///./src/utils/interceptor.js","webpack:///./src/utils/cacheManager.js","webpack:///./src/statistical.method.js","webpack:///./src/utils/validator.js","webpack:///./src/probability/epsilon.js","webpack:///./src/probability/chiSquaredTable.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","interceptor","cacheManager","StatisticalMethod","Statistical","_StatisticalMethod","_ret","_this","getPrototypeOf","_settings","cache","enabled","rootElementCount","subElementCount","cacheBefore","get","set","options","Error","isNaN","settings","Interceptor","object","exclude","Proxy","propKey","includes","res","find","arguments","undefined","result","apply","update","dataSet","Reflect","CacheManager","_cache","method","keys","splice","push","date","Date","getTime","some","v","validator","epsilon","chiSquaredTable","_validator","_chiSquaredProbTable","_epsilon","validate","sort","a","b","reduce","accumulator","current","middle","Math","floor","isEven","mode","counter","max","map","index","sum","avg","mean","n","pow","sqrt","variance","ceil","Array","from","k","min","median","stdDeviation","quantile","factorialResult","trials","probability","x","cumulativeProbability","cells","factorial","binomial","lambda","E","distributionType","significance","observedFrequencies","val","filter","dataSetMean","hypothesizedDistribution","expectedFrequencies","entries","reduceRight","previous","chiSquared","degreesOfFreedom","mu","sd","sqrtSampleSize","dataSet1","dataSet2","meanX","meanY","sampleVarianceX","sampleVariance","sampleVarianceY","weightedVariance","Validator","parameterName","rules","r","isArray","hasOnlyNumbers","1","0.995","0.99","0.975","0.95","0.9","0.5","0.1","0.05","0.025","0.01","0.005","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","40","50","60","70","80","90","100"],"mappings":"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","file":"statistical.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"statistical\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"statistical\"] = factory();\n\telse\n\t\troot[\"statistical\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"statistical\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"statistical\"] = factory();\n\telse\n\t\troot[\"statistical\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar interceptor = __webpack_require__(2);\n\tvar cacheManager = __webpack_require__(3);\n\tvar StatisticalMethod = __webpack_require__(4);\n\t\n\tvar Statistical = function (_StatisticalMethod) {\n\t    _inherits(Statistical, _StatisticalMethod);\n\t\n\t    function Statistical() {\n\t        var _ret;\n\t\n\t        _classCallCheck(this, Statistical);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Statistical.__proto__ || Object.getPrototypeOf(Statistical)).call(this));\n\t\n\t        _this._settings = {\n\t            cache: {\n\t                enabled: true,\n\t                rootElementCount: 10,\n\t                subElementCount: 30\n\t            }\n\t        };\n\t        return _ret = interceptor.cacheBefore(_this, cacheManager, [\n\t        /* Excluded from the proxy */\n\t        '_settings', 'settings', 'chiSquaredProbTable']), _possibleConstructorReturn(_this, _ret);\n\t    }\n\t\n\t    /**\n\t     * Return settings used in statistical class.\n\t     *\n\t     * @returns {*}\n\t     */\n\t\n\t\n\t    _createClass(Statistical, [{\n\t        key: 'settings',\n\t        get: function get() {\n\t            return this._settings;\n\t        }\n\t\n\t        /**\n\t         * Allow to updates statistical settings.\n\t         *\n\t         * @param {*|object} options\n\t         */\n\t        ,\n\t        set: function set(options) {\n\t            if (!options && !options.cache) throw new Error('Missing parameter options (Statistical:settings');\n\t            if (isNaN(options.cache.rootElementCount)) throw new Error('rootElementCount must be a number (Statistical:settings');\n\t            if (isNaN(options.cache.subElementCount)) throw new Error('subElementCount must be a number (Statistical:settings');\n\t\n\t            this._settings = {\n\t                cache: {\n\t                    enabled: options.cache.enabled,\n\t                    rootElementCount: options.cache.rootElementCount || 10,\n\t                    subElementCount: options.cache.subElementCount || 30\n\t                }\n\t            };\n\t            cacheManager.settings = this._settings.cache;\n\t        }\n\t    }]);\n\t\n\t    return Statistical;\n\t}(StatisticalMethod);\n\t\n\tmodule.exports = new Statistical();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Interceptor = function () {\n\t    function Interceptor() {\n\t        _classCallCheck(this, Interceptor);\n\t    }\n\t\n\t    /**\n\t     * Create a proxy to wrap a class method and intercept each call.\n\t     *\n\t     * @param {object} object\n\t     * @param {object} cacheManager\n\t     */\n\t\n\t\n\t    _createClass(Interceptor, [{\n\t        key: 'cacheBefore',\n\t        value: function cacheBefore(object, cacheManager, exclude) {\n\t            return new Proxy(object, {\n\t                get: function get(target, propKey) {\n\t                    if (propKey in target && !exclude.includes(propKey)) {\n\t                        return function () {\n\t                            var res = void 0;\n\t                            if (cacheManager.settings.enabled) {\n\t                                var cache = cacheManager.find(propKey, arguments.length <= 0 ? undefined : arguments[0]);\n\t                                if (cache) return cache.result;\n\t\n\t                                res = target[propKey].apply(target, arguments);\n\t                                cacheManager.update(propKey, { dataSet: arguments.length <= 0 ? undefined : arguments[0], result: res });\n\t                            } else {\n\t                                res = target[propKey].apply(target, arguments);\n\t                            }\n\t\n\t                            return res;\n\t                        };\n\t                    } else {\n\t                        return Reflect.get(target, propKey);\n\t                    }\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Interceptor;\n\t}();\n\t\n\tmodule.exports = new Interceptor();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CacheManager = function () {\n\t    function CacheManager() {\n\t        _classCallCheck(this, CacheManager);\n\t\n\t        this._cache = {};\n\t        this._settings = {\n\t            enabled: true,\n\t            rootElementCount: 10,\n\t            subElementCount: 30\n\t        };\n\t    }\n\t\n\t    /**\n\t     * Return CacheManager settings.\n\t     *\n\t     * @returns {{maxLength: number}|*}\n\t     */\n\t\n\t\n\t    _createClass(CacheManager, [{\n\t        key: 'update',\n\t\n\t\n\t        /**\n\t         * Update the cache saved with new results.\n\t         *\n\t         * @param {string} method\n\t         * @param {Object} options\n\t         */\n\t        value: function update(method, options) {\n\t            if (Object.keys(this._cache).length >= this._settings.rootElementCount) delete this._cache[Object.keys(this._cache)[0]];\n\t            if (this._cache[method] && this._cache[method].length >= this._settings.subElementCount) this._cache[method].splice(0, 1);\n\t\n\t            this._cache[method] = this._cache[method] || [];\n\t            this._cache[method].push({\n\t                date: new Date().getTime(),\n\t                dataSet: options.dataSet,\n\t                result: options.result\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Find an existing dataSet in the cache and return it.\n\t         *\n\t         * @param {String} method\n\t         * @param {Array} dataSet\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'find',\n\t        value: function find(method, dataSet) {\n\t            var cache = this._cache[method] || [];\n\t\n\t            var res = null;\n\t            cache.some(function (v) {\n\t                if (v.dataSet === dataSet) {\n\t                    res = v;\n\t                    return true;\n\t                }\n\t\n\t                return false;\n\t            });\n\t\n\t            return res;\n\t        }\n\t\n\t        /**\n\t         * Reset the cache to be empty.\n\t         */\n\t\n\t    }, {\n\t        key: 'reset',\n\t        value: function reset() {\n\t            this._cache = {};\n\t        }\n\t    }, {\n\t        key: 'settings',\n\t        get: function get() {\n\t            return this._settings;\n\t        }\n\t\n\t        /**\n\t         * Return the entire cache\n\t         *\n\t         * @returns {{}|*}\n\t         */\n\t        ,\n\t\n\t\n\t        /**\n\t         * Update existing settings to manage cache.\n\t         *\n\t         * @param {*} options\n\t         */\n\t        set: function set(options) {\n\t            if (!options) throw new Error('Missing parameter options (CacheManager:settings)');\n\t            this._settings = {\n\t                enabled: options.enabled,\n\t                rootElementCount: options.rootElementCount || 10,\n\t                subElementCount: options.subElementCount || 30\n\t            };\n\t        }\n\t    }, {\n\t        key: 'cache',\n\t        get: function get() {\n\t            return this._cache;\n\t        }\n\t    }]);\n\t\n\t    return CacheManager;\n\t}();\n\t\n\tmodule.exports = new CacheManager();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar validator = __webpack_require__(5);\n\tvar epsilon = __webpack_require__(6);\n\tvar chiSquaredTable = __webpack_require__(7);\n\t\n\tvar StatisticalMethod = function () {\n\t    function StatisticalMethod() {\n\t        _classCallCheck(this, StatisticalMethod);\n\t\n\t        this._validator = validator;\n\t        this._chiSquaredProbTable = chiSquaredTable;\n\t        this._epsilon = epsilon;\n\t    }\n\t\n\t    /**\n\t     * Return table of chi squared prob.\n\t     *\n\t     * @returns {*}\n\t     */\n\t\n\t\n\t    _createClass(StatisticalMethod, [{\n\t        key: 'min',\n\t\n\t\n\t        /**\n\t         * Return the smallest value of the dataSet.\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {number}\n\t         */\n\t        value: function min(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t            return dataSet.sort(function (a, b) {\n\t                return a - b;\n\t            })[0];\n\t        }\n\t\n\t        /**\n\t         * Return the biggest value of the dataSet.\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'max',\n\t        value: function max(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t            return dataSet.sort(function (a, b) {\n\t                return a + b;\n\t            })[0];\n\t        }\n\t\n\t        /**\n\t         * The [Sum](https://en.wikipedia.org/wiki/Sum).\n\t         *\n\t         * @param dataSet\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'sum',\n\t        value: function sum(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t            return dataSet.reduce(function (accumulator, current) {\n\t                return accumulator + current;\n\t            }, 0);\n\t        }\n\t\n\t        /**\n\t         * The [Median](https://en.wikipedia.org/wiki/Median).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'median',\n\t        value: function median(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t\n\t            var middle = Math.floor(dataSet.length / 2);\n\t            var isEven = dataSet.length % 2 === 0;\n\t\n\t            dataSet = dataSet.sort(function (a, b) {\n\t                return a - b;\n\t            });\n\t\n\t            return isEven ? (dataSet[middle - 1] + dataSet[middle]) / 2 : dataSet[middle];\n\t        }\n\t\n\t        /**\n\t         * The [Mode](https://en.wikipedia.org/wiki/Mode).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {*}\n\t         */\n\t\n\t    }, {\n\t        key: 'mode',\n\t        value: function mode(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t\n\t            var counter = {};\n\t            var mode = [];\n\t            var max = 0;\n\t\n\t            dataSet.map(function (value, index) {\n\t                if (!(dataSet[index] in counter)) counter[dataSet[index]] = 0;\n\t\n\t                counter[dataSet[index]]++;\n\t\n\t                if (counter[dataSet[index]] === max) mode.push(dataSet[index]);\n\t                if (counter[dataSet[index]] > max) {\n\t                    max = counter[dataSet[index]];\n\t                    mode = [dataSet[index]];\n\t                }\n\t            });\n\t\n\t            return mode.length > 1 ? mode : mode[0];\n\t        }\n\t\n\t        /**\n\t         * The [Mean](https://en.wikipedia.org/wiki/Mean).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'mean',\n\t        value: function mean(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t\n\t            return this.sum(dataSet) / dataSet.length;\n\t        }\n\t\n\t        /**\n\t         * The [Variance](https://en.wikipedia.org/wiki/Variance).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'variance',\n\t        value: function variance(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t\n\t            var avg = this.mean(dataSet);\n\t            var n = dataSet.length;\n\t\n\t            return this.sum(dataSet.map(function (value) {\n\t                return Math.pow(value - avg, 2);\n\t            })) / n;\n\t        }\n\t\n\t        /**\n\t         * The [Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'stdDeviation',\n\t        value: function stdDeviation(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t            return Math.sqrt(this.variance(dataSet));\n\t        }\n\t\n\t        /**\n\t         * The [Quantile](http://en.wikipedia.org/wiki/Quantile).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @param {number} index\n\t         * @returns {Array}\n\t         */\n\t\n\t    }, {\n\t        key: 'quantile',\n\t        value: function quantile(dataSet) {\n\t            var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t\n\t            dataSet = dataSet.sort(function (a, b) {\n\t                return a - b;\n\t            });\n\t            return !index ? [1, 2, 3, 4].map(function (i) {\n\t                return dataSet[Math.ceil(dataSet.length * (i / 4)) - 1];\n\t            }) : dataSet[Math.ceil(dataSet.length * (index / 4) - 1)];\n\t        }\n\t\n\t        /**\n\t         * The [Percentile](https://en.wikipedia.org/wiki/Percentile).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @param {number} index\n\t         * @returns {Array}\n\t         */\n\t\n\t    }, {\n\t        key: 'percentile',\n\t        value: function percentile(dataSet) {\n\t            var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t\n\t            dataSet = dataSet.sort(function (a, b) {\n\t                return a - b;\n\t            });\n\t            return !index ? Array.from({ length: 99 }, function (v, k) {\n\t                return k + 1;\n\t            }).map(function (i) {\n\t                return dataSet[i];\n\t            }) : dataSet[Math.ceil(index / 100 * dataSet.length)];\n\t        }\n\t\n\t        /**\n\t         * Return the entire result of descriptives statistics above.\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {{min: number, max: number, sum: *, median: number, mode: *, mean: number, variance: number, stdDeviation: number, quantile: Array}}\n\t         */\n\t\n\t    }, {\n\t        key: 'summary',\n\t        value: function summary(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t\n\t            return {\n\t                min: this.min(dataSet),\n\t                max: this.max(dataSet),\n\t                sum: this.sum(dataSet),\n\t                median: this.median(dataSet),\n\t                mode: this.mode(dataSet),\n\t                mean: this.mean(dataSet),\n\t                variance: this.variance(dataSet),\n\t                stdDeviation: this.stdDeviation(dataSet),\n\t                quantile: this.quantile(dataSet)\n\t            };\n\t        }\n\t\n\t        /**\n\t         * The [Factorial](https://en.wikipedia.org/wiki/Factorial).\n\t         *\n\t         * @param {number} n\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'factorial',\n\t        value: function factorial(n) {\n\t            this._validator.validate('n', n, ['isNumber', 'positive']);\n\t\n\t            var factorialResult = 1;\n\t            for (var i = 2; i <= n; i++) {\n\t                factorialResult *= i;\n\t            }\n\t\n\t            return factorialResult;\n\t        }\n\t\n\t        /**\n\t         * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'geometricMean',\n\t        value: function geometricMean(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t            return Math.pow(dataSet.reduce(function (accumulator, current) {\n\t                return accumulator * current;\n\t            }, 1), 1 / dataSet.length);\n\t        }\n\t\n\t        /**\n\t         * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'harmonicMean',\n\t        value: function harmonicMean(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t            return dataSet.length / dataSet.reduce(function (accumulator, current) {\n\t                return accumulator + 1 / current;\n\t            }, 0);\n\t        }\n\t\n\t        /**\n\t         * The [Variance](https://en.wikipedia.org/wiki/Harmonic_mean).\n\t         * The [Biais](https://fr.wikipedia.org/wiki/Estimateur_(statistique)#Biais).\n\t         *\n\t         * Non biased variance\n\t         *\n\t         * @param {Array} dataSet\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'sampleVariance',\n\t        value: function sampleVariance(dataSet) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t\n\t            var avg = this.mean(dataSet);\n\t            var n = dataSet.length - 1;\n\t\n\t            return this.sum(dataSet.map(function (value) {\n\t                return Math.pow(value - avg, 2);\n\t            })) / n;\n\t        }\n\t\n\t        /**\n\t         * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution).\n\t         *\n\t         * @param {number} trials\n\t         * @param {number} probability\n\t         * @returns {{}}\n\t         */\n\t\n\t    }, {\n\t        key: 'binomial',\n\t        value: function binomial(trials, probability) {\n\t            this._validator.validate('trials', trials, ['isNumber']);\n\t            this._validator.validate('probability', probability, ['isNumber', [0, 1]]);\n\t\n\t            var x = 0;\n\t            var cumulativeProbability = 0;\n\t            var cells = {};\n\t\n\t            do {\n\t                cells[x] = this.factorial(trials) / (this.factorial(x) * this.factorial(trials - x)) * (Math.pow(probability, x) * Math.pow(1 - probability, trials - x));\n\t                cumulativeProbability += cells[x];\n\t                x++;\n\t            } while (cumulativeProbability < 1 - this._epsilon);\n\t\n\t            return cells;\n\t        }\n\t\n\t        /**\n\t         * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution).\n\t         *\n\t         * @param {number} p\n\t         * @returns {Object}\n\t         */\n\t\n\t    }, {\n\t        key: 'bernoulli',\n\t        value: function bernoulli(p) {\n\t            this._validator.validate('p', p, ['isNumber', [0, 1]]);\n\t            return this.binomial(1, p);\n\t        }\n\t\n\t        /**\n\t         * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution).\n\t         *\n\t         * @param {number} lambda\n\t         * @returns {{}}\n\t         */\n\t\n\t    }, {\n\t        key: 'poisson',\n\t        value: function poisson(lambda) {\n\t            this._validator.validate('lambda', lambda, ['strictlyPositive']);\n\t\n\t            var x = 0;\n\t            var cumulativeProbability = 0;\n\t            var cells = {};\n\t\n\t            do {\n\t                cells[x] = Math.pow(Math.E, -lambda) * Math.pow(lambda, x) / this.factorial(x);\n\t                cumulativeProbability += cells[x];\n\t                x++;\n\t            } while (cumulativeProbability < 1 - this._epsilon);\n\t\n\t            return cells;\n\t        }\n\t\n\t        /**\n\t         * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test).\n\t         * return if data follow a specified distribution\n\t         *\n\t         * @param {Array} dataSet\n\t         * @param {Function} distributionType\n\t         * @param {number} significance\n\t         * @returns {boolean}\n\t         *\n\t         * @exemple\n\t         * chiSquaredGoodnessOfFit(dataSet, 'poisson', 0.05)); //= false\n\t         */\n\t\n\t    }, {\n\t        key: 'chiSquaredGoodnessOfFit',\n\t        value: function chiSquaredGoodnessOfFit(dataSet, distributionType, significance) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t            this._validator.validate('distributionType', distributionType, ['isFunction']);\n\t            this._validator.validate('significance', significance, ['isNumber', 'positive']);\n\t\n\t            /* Generate an array with number of ocurences for each data in dataSet. */\n\t            var observedFrequencies = [];\n\t            observedFrequencies = dataSet.reduce(function (accumulator, val) {\n\t                if (accumulator[val] === undefined) accumulator[val] = 0;\n\t                accumulator[val] += 1;\n\t                return accumulator;\n\t            }, []).filter(function (v) {\n\t                return v !== undefined;\n\t            });\n\t\n\t            /* Number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test. */\n\t            /* Lose one degree of freedom for estimating `lambda` from the sample data. */\n\t            var dataSetMean = this.mean(dataSet);\n\t\n\t            /* The hypothesized distribution. Generate the hypothesized distribution. */\n\t            var hypothesizedDistribution = distributionType(dataSetMean);\n\t\n\t            /* Create an array holding a histogram of expected data given the */\n\t            /* sample size and hypothesized distribution. */\n\t            var expectedFrequencies = [];\n\t            expectedFrequencies = Object.entries(hypothesizedDistribution).reduce(function (accumulator, current, i) {\n\t                if (observedFrequencies[i]) accumulator[i] = current[1] * dataSet.length;\n\t                return accumulator;\n\t            }, []);\n\t\n\t            /* Concat frequencies < 3 with the previous one */\n\t            expectedFrequencies = Object.entries(expectedFrequencies).reduceRight(function (previous, current) {\n\t                if (previous[1] < 3) current[1] += previous[1];\n\t                return current;\n\t            });\n\t\n\t            /* Compute chiSquared value */\n\t            var chiSquared = 0;\n\t            chiSquared = Object.entries(observedFrequencies).reduce(function (accumulator, current, i) {\n\t                accumulator += Math.pow(current[1] - expectedFrequencies[i], 2) / expectedFrequencies[i];\n\t                return accumulator;\n\t            }, chiSquared);\n\t\n\t            var c = 1;\n\t            var degreesOfFreedom = Object.keys(observedFrequencies).length - c - 1;\n\t\n\t            return this._chiSquaredProbTable[degreesOfFreedom][significance] < chiSquared;\n\t        }\n\t\n\t        /**\n\t         * The [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test).\n\t         *\n\t         * @param {Array} dataSet\n\t         * @param {number} mu\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'tTestOneSample',\n\t        value: function tTestOneSample(dataSet, mu) {\n\t            this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\t            this._validator.validate('mu', mu, ['isNumber']);\n\t\n\t            var mean = this.mean(dataSet);\n\t            var sd = this.stdDeviation(dataSet);\n\t            var sqrtSampleSize = Math.sqrt(dataSet.length);\n\t\n\t            /* t-value */\n\t            return (mean - mu) / (sd / sqrtSampleSize);\n\t        }\n\t\n\t        /**\n\t         * The [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n\t         *\n\t         * @param {Array} dataSet1\n\t         * @param {Array} dataSet2\n\t         * @returns {number}\n\t         */\n\t\n\t    }, {\n\t        key: 'tTestTwoSample',\n\t        value: function tTestTwoSample(dataSet1, dataSet2) {\n\t            this._validator.validate('dataSet1', dataSet1, ['isArray', 'length > 0']);\n\t            this._validator.validate('dataSet2', dataSet2, ['isArray', 'length > 0']);\n\t\n\t            var n = dataSet1.length;\n\t            var m = dataSet2.length;\n\t            var meanX = this.mean(dataSet1);\n\t            var meanY = this.mean(dataSet2);\n\t            var sampleVarianceX = this.sampleVariance(dataSet1);\n\t            var sampleVarianceY = this.sampleVariance(dataSet2);\n\t\n\t            var weightedVariance = ((n - 1) * sampleVarianceX + (m - 1) * sampleVarianceY) / (n + m - 2);\n\t\n\t            /* t-value */\n\t            return (meanX - meanY) / Math.sqrt(weightedVariance * (1 / (n + 1) / m));\n\t        }\n\t    }, {\n\t        key: 'chiSquaredProbTable',\n\t        get: function get() {\n\t            return this._chiSquaredProbTable;\n\t        }\n\t    }]);\n\t\n\t    return StatisticalMethod;\n\t}();\n\t\n\tmodule.exports = StatisticalMethod;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Validator = function () {\n\t    function Validator() {\n\t        _classCallCheck(this, Validator);\n\t    }\n\t\n\t    /**\n\t     * Valid a value with rules given, if the rules are not respected throw an error.\n\t     *\n\t     * @param {string} parameterName\n\t     * @param {*} value\n\t     * @param {Array} ruless\n\t     */\n\t\n\t\n\t    _createClass(Validator, [{\n\t        key: 'validate',\n\t        value: function validate(parameterName, value, rules) {\n\t            rules.map(function (r) {\n\t                switch (r) {\n\t                    case 'isArray':\n\t                        if (!Array.isArray(value)) throw new Error('Parameter ' + parameterName + ' must be an array');\n\t                        break;\n\t                    case 'isNumber':\n\t                        if (typeof value !== 'number') throw new Error('Parameter ' + parameterName + ' must be a number');\n\t                        break;\n\t                    case 'isString':\n\t                        if (typeof value !== 'string') throw new Error('Parameter ' + parameterName + ' must be a string');\n\t                        break;\n\t                    case 'isFunction':\n\t                        if (typeof value !== 'function') throw new Error('Parameter ' + parameterName + ' must be a function');\n\t                        break;\n\t                    case 'length > 0':\n\t                        if (value.length === 0) throw new Error('Parameter ' + parameterName + ' must have more than 0 values');\n\t                        break;\n\t                    case 'positive':\n\t                        if (value < 0) throw new Error('Parameter ' + parameterName + ' must be positive');\n\t                        break;\n\t                    case 'strictlyPositive':\n\t                        if (value <= 0) throw new Error('Parameter ' + parameterName + ' must be strictly positive');\n\t                        break;\n\t                    default:\n\t                        if (Array.isArray(r)) {\n\t                            var hasOnlyNumbers = !r.map(function (v) {\n\t                                return !isNaN(v);\n\t                            }).includes(false);\n\t                            if (hasOnlyNumbers) {\n\t                                if (r.length === 2) {\n\t                                    if (value < r[0] || value > r[1]) throw new Error('Parameter ' + parameterName + ' must fall between ' + r[0] + ' and ' + r[1]);\n\t                                }\n\t                            }\n\t                        } else {\n\t                            throw new Error('Method not implemented : ' + r);\n\t                        }\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Validator;\n\t}();\n\t\n\tmodule.exports = new Validator();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n\t * until we're \"close enough\". Epsilon is a very small number: for\n\t * simple statistics, that number is **0.0001**\n\t *\n\t * This is used in calculations like the binomialDistribution, in which\n\t * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n\t * it progresses until it is close enough.\n\t *\n\t * @type {number}\n\t */\n\tvar epsilon = 0.0001;\n\t\n\tmodule.exports = epsilon;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution)\n\t *\n\t * @type {*}\n\t */\n\t\n\tvar chiSquaredTable = {\n\t    '1': {\n\t        '0.995': 0,\n\t        '0.99': 0,\n\t        '0.975': 0,\n\t        '0.95': 0,\n\t        '0.9': 0.02,\n\t        '0.5': 0.45,\n\t        '0.1': 2.71,\n\t        '0.05': 3.84,\n\t        '0.025': 5.02,\n\t        '0.01': 6.63,\n\t        '0.005': 7.88\n\t    },\n\t    '2': {\n\t        '0.995': 0.01,\n\t        '0.99': 0.02,\n\t        '0.975': 0.05,\n\t        '0.95': 0.1,\n\t        '0.9': 0.21,\n\t        '0.5': 1.39,\n\t        '0.1': 4.61,\n\t        '0.05': 5.99,\n\t        '0.025': 7.38,\n\t        '0.01': 9.21,\n\t        '0.005': 10.6\n\t    },\n\t    '3': {\n\t        '0.995': 0.07,\n\t        '0.99': 0.11,\n\t        '0.975': 0.22,\n\t        '0.95': 0.35,\n\t        '0.9': 0.58,\n\t        '0.5': 2.37,\n\t        '0.1': 6.25,\n\t        '0.05': 7.81,\n\t        '0.025': 9.35,\n\t        '0.01': 11.34,\n\t        '0.005': 12.84\n\t    },\n\t    '4': {\n\t        '0.995': 0.21,\n\t        '0.99': 0.3,\n\t        '0.975': 0.48,\n\t        '0.95': 0.71,\n\t        '0.9': 1.06,\n\t        '0.5': 3.36,\n\t        '0.1': 7.78,\n\t        '0.05': 9.49,\n\t        '0.025': 11.14,\n\t        '0.01': 13.28,\n\t        '0.005': 14.86\n\t    },\n\t    '5': {\n\t        '0.995': 0.41,\n\t        '0.99': 0.55,\n\t        '0.975': 0.83,\n\t        '0.95': 1.15,\n\t        '0.9': 1.61,\n\t        '0.5': 4.35,\n\t        '0.1': 9.24,\n\t        '0.05': 11.07,\n\t        '0.025': 12.83,\n\t        '0.01': 15.09,\n\t        '0.005': 16.75\n\t    },\n\t    '6': {\n\t        '0.995': 0.68,\n\t        '0.99': 0.87,\n\t        '0.975': 1.24,\n\t        '0.95': 1.64,\n\t        '0.9': 2.2,\n\t        '0.5': 5.35,\n\t        '0.1': 10.65,\n\t        '0.05': 12.59,\n\t        '0.025': 14.45,\n\t        '0.01': 16.81,\n\t        '0.005': 18.55\n\t    },\n\t    '7': {\n\t        '0.995': 0.99,\n\t        '0.99': 1.25,\n\t        '0.975': 1.69,\n\t        '0.95': 2.17,\n\t        '0.9': 2.83,\n\t        '0.5': 6.35,\n\t        '0.1': 12.02,\n\t        '0.05': 14.07,\n\t        '0.025': 16.01,\n\t        '0.01': 18.48,\n\t        '0.005': 20.28\n\t    },\n\t    '8': {\n\t        '0.995': 1.34,\n\t        '0.99': 1.65,\n\t        '0.975': 2.18,\n\t        '0.95': 2.73,\n\t        '0.9': 3.49,\n\t        '0.5': 7.34,\n\t        '0.1': 13.36,\n\t        '0.05': 15.51,\n\t        '0.025': 17.53,\n\t        '0.01': 20.09,\n\t        '0.005': 21.96\n\t    },\n\t    '9': {\n\t        '0.995': 1.73,\n\t        '0.99': 2.09,\n\t        '0.975': 2.7,\n\t        '0.95': 3.33,\n\t        '0.9': 4.17,\n\t        '0.5': 8.34,\n\t        '0.1': 14.68,\n\t        '0.05': 16.92,\n\t        '0.025': 19.02,\n\t        '0.01': 21.67,\n\t        '0.005': 23.59\n\t    },\n\t    '10': {\n\t        '0.995': 2.16,\n\t        '0.99': 2.56,\n\t        '0.975': 3.25,\n\t        '0.95': 3.94,\n\t        '0.9': 4.87,\n\t        '0.5': 9.34,\n\t        '0.1': 15.99,\n\t        '0.05': 18.31,\n\t        '0.025': 20.48,\n\t        '0.01': 23.21,\n\t        '0.005': 25.19\n\t    },\n\t    '11': {\n\t        '0.995': 2.6,\n\t        '0.99': 3.05,\n\t        '0.975': 3.82,\n\t        '0.95': 4.57,\n\t        '0.9': 5.58,\n\t        '0.5': 10.34,\n\t        '0.1': 17.28,\n\t        '0.05': 19.68,\n\t        '0.025': 21.92,\n\t        '0.01': 24.72,\n\t        '0.005': 26.76\n\t    },\n\t    '12': {\n\t        '0.995': 3.07,\n\t        '0.99': 3.57,\n\t        '0.975': 4.4,\n\t        '0.95': 5.23,\n\t        '0.9': 6.3,\n\t        '0.5': 11.34,\n\t        '0.1': 18.55,\n\t        '0.05': 21.03,\n\t        '0.025': 23.34,\n\t        '0.01': 26.22,\n\t        '0.005': 28.3\n\t    },\n\t    '13': {\n\t        '0.995': 3.57,\n\t        '0.99': 4.11,\n\t        '0.975': 5.01,\n\t        '0.95': 5.89,\n\t        '0.9': 7.04,\n\t        '0.5': 12.34,\n\t        '0.1': 19.81,\n\t        '0.05': 22.36,\n\t        '0.025': 24.74,\n\t        '0.01': 27.69,\n\t        '0.005': 29.82\n\t    },\n\t    '14': {\n\t        '0.995': 4.07,\n\t        '0.99': 4.66,\n\t        '0.975': 5.63,\n\t        '0.95': 6.57,\n\t        '0.9': 7.79,\n\t        '0.5': 13.34,\n\t        '0.1': 21.06,\n\t        '0.05': 23.68,\n\t        '0.025': 26.12,\n\t        '0.01': 29.14,\n\t        '0.005': 31.32\n\t    },\n\t    '15': {\n\t        '0.995': 4.6,\n\t        '0.99': 5.23,\n\t        '0.975': 6.27,\n\t        '0.95': 7.26,\n\t        '0.9': 8.55,\n\t        '0.5': 14.34,\n\t        '0.1': 22.31,\n\t        '0.05': 25,\n\t        '0.025': 27.49,\n\t        '0.01': 30.58,\n\t        '0.005': 32.8\n\t    },\n\t    '16': {\n\t        '0.995': 5.14,\n\t        '0.99': 5.81,\n\t        '0.975': 6.91,\n\t        '0.95': 7.96,\n\t        '0.9': 9.31,\n\t        '0.5': 15.34,\n\t        '0.1': 23.54,\n\t        '0.05': 26.3,\n\t        '0.025': 28.85,\n\t        '0.01': 32,\n\t        '0.005': 34.27\n\t    },\n\t    '17': {\n\t        '0.995': 5.7,\n\t        '0.99': 6.41,\n\t        '0.975': 7.56,\n\t        '0.95': 8.67,\n\t        '0.9': 10.09,\n\t        '0.5': 16.34,\n\t        '0.1': 24.77,\n\t        '0.05': 27.59,\n\t        '0.025': 30.19,\n\t        '0.01': 33.41,\n\t        '0.005': 35.72\n\t    },\n\t    '18': {\n\t        '0.995': 6.26,\n\t        '0.99': 7.01,\n\t        '0.975': 8.23,\n\t        '0.95': 9.39,\n\t        '0.9': 10.87,\n\t        '0.5': 17.34,\n\t        '0.1': 25.99,\n\t        '0.05': 28.87,\n\t        '0.025': 31.53,\n\t        '0.01': 34.81,\n\t        '0.005': 37.16\n\t    },\n\t    '19': {\n\t        '0.995': 6.84,\n\t        '0.99': 7.63,\n\t        '0.975': 8.91,\n\t        '0.95': 10.12,\n\t        '0.9': 11.65,\n\t        '0.5': 18.34,\n\t        '0.1': 27.2,\n\t        '0.05': 30.14,\n\t        '0.025': 32.85,\n\t        '0.01': 36.19,\n\t        '0.005': 38.58\n\t    },\n\t    '20': {\n\t        '0.995': 7.43,\n\t        '0.99': 8.26,\n\t        '0.975': 9.59,\n\t        '0.95': 10.85,\n\t        '0.9': 12.44,\n\t        '0.5': 19.34,\n\t        '0.1': 28.41,\n\t        '0.05': 31.41,\n\t        '0.025': 34.17,\n\t        '0.01': 37.57,\n\t        '0.005': 40\n\t    },\n\t    '21': {\n\t        '0.995': 8.03,\n\t        '0.99': 8.9,\n\t        '0.975': 10.28,\n\t        '0.95': 11.59,\n\t        '0.9': 13.24,\n\t        '0.5': 20.34,\n\t        '0.1': 29.62,\n\t        '0.05': 32.67,\n\t        '0.025': 35.48,\n\t        '0.01': 38.93,\n\t        '0.005': 41.4\n\t    },\n\t    '22': {\n\t        '0.995': 8.64,\n\t        '0.99': 9.54,\n\t        '0.975': 10.98,\n\t        '0.95': 12.34,\n\t        '0.9': 14.04,\n\t        '0.5': 21.34,\n\t        '0.1': 30.81,\n\t        '0.05': 33.92,\n\t        '0.025': 36.78,\n\t        '0.01': 40.29,\n\t        '0.005': 42.8\n\t    },\n\t    '23': {\n\t        '0.995': 9.26,\n\t        '0.99': 10.2,\n\t        '0.975': 11.69,\n\t        '0.95': 13.09,\n\t        '0.9': 14.85,\n\t        '0.5': 22.34,\n\t        '0.1': 32.01,\n\t        '0.05': 35.17,\n\t        '0.025': 38.08,\n\t        '0.01': 41.64,\n\t        '0.005': 44.18\n\t    },\n\t    '24': {\n\t        '0.995': 9.89,\n\t        '0.99': 10.86,\n\t        '0.975': 12.4,\n\t        '0.95': 13.85,\n\t        '0.9': 15.66,\n\t        '0.5': 23.34,\n\t        '0.1': 33.2,\n\t        '0.05': 36.42,\n\t        '0.025': 39.36,\n\t        '0.01': 42.98,\n\t        '0.005': 45.56\n\t    },\n\t    '25': {\n\t        '0.995': 10.52,\n\t        '0.99': 11.52,\n\t        '0.975': 13.12,\n\t        '0.95': 14.61,\n\t        '0.9': 16.47,\n\t        '0.5': 24.34,\n\t        '0.1': 34.28,\n\t        '0.05': 37.65,\n\t        '0.025': 40.65,\n\t        '0.01': 44.31,\n\t        '0.005': 46.93\n\t    },\n\t    '26': {\n\t        '0.995': 11.16,\n\t        '0.99': 12.2,\n\t        '0.975': 13.84,\n\t        '0.95': 15.38,\n\t        '0.9': 17.29,\n\t        '0.5': 25.34,\n\t        '0.1': 35.56,\n\t        '0.05': 38.89,\n\t        '0.025': 41.92,\n\t        '0.01': 45.64,\n\t        '0.005': 48.29\n\t    },\n\t    '27': {\n\t        '0.995': 11.81,\n\t        '0.99': 12.88,\n\t        '0.975': 14.57,\n\t        '0.95': 16.15,\n\t        '0.9': 18.11,\n\t        '0.5': 26.34,\n\t        '0.1': 36.74,\n\t        '0.05': 40.11,\n\t        '0.025': 43.19,\n\t        '0.01': 46.96,\n\t        '0.005': 49.65\n\t    },\n\t    '28': {\n\t        '0.995': 12.46,\n\t        '0.99': 13.57,\n\t        '0.975': 15.31,\n\t        '0.95': 16.93,\n\t        '0.9': 18.94,\n\t        '0.5': 27.34,\n\t        '0.1': 37.92,\n\t        '0.05': 41.34,\n\t        '0.025': 44.46,\n\t        '0.01': 48.28,\n\t        '0.005': 50.99\n\t    },\n\t    '29': {\n\t        '0.995': 13.12,\n\t        '0.99': 14.26,\n\t        '0.975': 16.05,\n\t        '0.95': 17.71,\n\t        '0.9': 19.77,\n\t        '0.5': 28.34,\n\t        '0.1': 39.09,\n\t        '0.05': 42.56,\n\t        '0.025': 45.72,\n\t        '0.01': 49.59,\n\t        '0.005': 52.34\n\t    },\n\t    '30': {\n\t        '0.995': 13.79,\n\t        '0.99': 14.95,\n\t        '0.975': 16.79,\n\t        '0.95': 18.49,\n\t        '0.9': 20.6,\n\t        '0.5': 29.34,\n\t        '0.1': 40.26,\n\t        '0.05': 43.77,\n\t        '0.025': 46.98,\n\t        '0.01': 50.89,\n\t        '0.005': 53.67\n\t    },\n\t    '40': {\n\t        '0.995': 20.71,\n\t        '0.99': 22.16,\n\t        '0.975': 24.43,\n\t        '0.95': 26.51,\n\t        '0.9': 29.05,\n\t        '0.5': 39.34,\n\t        '0.1': 51.81,\n\t        '0.05': 55.76,\n\t        '0.025': 59.34,\n\t        '0.01': 63.69,\n\t        '0.005': 66.77\n\t    },\n\t    '50': {\n\t        '0.995': 27.99,\n\t        '0.99': 29.71,\n\t        '0.975': 32.36,\n\t        '0.95': 34.76,\n\t        '0.9': 37.69,\n\t        '0.5': 49.33,\n\t        '0.1': 63.17,\n\t        '0.05': 67.5,\n\t        '0.025': 71.42,\n\t        '0.01': 76.15,\n\t        '0.005': 79.49\n\t    },\n\t    '60': {\n\t        '0.995': 35.53,\n\t        '0.99': 37.48,\n\t        '0.975': 40.48,\n\t        '0.95': 43.19,\n\t        '0.9': 46.46,\n\t        '0.5': 59.33,\n\t        '0.1': 74.4,\n\t        '0.05': 79.08,\n\t        '0.025': 83.3,\n\t        '0.01': 88.38,\n\t        '0.005': 91.95\n\t    },\n\t    '70': {\n\t        '0.995': 43.28,\n\t        '0.99': 45.44,\n\t        '0.975': 48.76,\n\t        '0.95': 51.74,\n\t        '0.9': 55.33,\n\t        '0.5': 69.33,\n\t        '0.1': 85.53,\n\t        '0.05': 90.53,\n\t        '0.025': 95.02,\n\t        '0.01': 100.42,\n\t        '0.005': 104.22\n\t    },\n\t    '80': {\n\t        '0.995': 51.17,\n\t        '0.99': 53.54,\n\t        '0.975': 57.15,\n\t        '0.95': 60.39,\n\t        '0.9': 64.28,\n\t        '0.5': 79.33,\n\t        '0.1': 96.58,\n\t        '0.05': 101.88,\n\t        '0.025': 106.63,\n\t        '0.01': 112.33,\n\t        '0.005': 116.32\n\t    },\n\t    '90': {\n\t        '0.995': 59.2,\n\t        '0.99': 61.75,\n\t        '0.975': 65.65,\n\t        '0.95': 69.13,\n\t        '0.9': 73.29,\n\t        '0.5': 89.33,\n\t        '0.1': 107.57,\n\t        '0.05': 113.14,\n\t        '0.025': 118.14,\n\t        '0.01': 124.12,\n\t        '0.005': 128.3\n\t    },\n\t    '100': {\n\t        '0.995': 67.33,\n\t        '0.99': 70.06,\n\t        '0.975': 74.22,\n\t        '0.95': 77.93,\n\t        '0.9': 82.36,\n\t        '0.5': 99.33,\n\t        '0.1': 118.5,\n\t        '0.05': 124.34,\n\t        '0.025': 129.56,\n\t        '0.01': 135.81,\n\t        '0.005': 140.17\n\t    }\n\t};\n\t\n\tmodule.exports = chiSquaredTable;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** statistical.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 19c3433b9898baae32ca\n **/","'use strict';\n\nconst interceptor = require('./utils/interceptor');\nconst cacheManager = require('./utils/cacheManager');\nconst StatisticalMethod = require('./statistical.method');\n\nclass Statistical extends StatisticalMethod {\n    constructor() {\n        super();\n        this._settings = {\n            cache: {\n                enabled: true,\n                rootElementCount: 10,\n                subElementCount: 30\n            }\n        };\n        return interceptor.cacheBefore(this, cacheManager, [\n            /* Excluded from the proxy */\n            '_settings',\n            'settings',\n            'chiSquaredProbTable'\n        ]);\n    }\n\n    /**\n     * Return settings used in statistical class.\n     *\n     * @returns {*}\n     */\n    get settings() {\n        return this._settings;\n    }\n\n    /**\n     * Allow to updates statistical settings.\n     *\n     * @param {*|object} options\n     */\n    set settings(options) {\n        if (!options && !options.cache) throw new Error('Missing parameter options (Statistical:settings');\n        if (isNaN(options.cache.rootElementCount)) throw new Error('rootElementCount must be a number (Statistical:settings');\n        if (isNaN(options.cache.subElementCount)) throw new Error('subElementCount must be a number (Statistical:settings');\n\n        this._settings = {\n            cache: {\n                enabled: options.cache.enabled,\n                rootElementCount: options.cache.rootElementCount || 10,\n                subElementCount: options.cache.subElementCount || 30\n            }\n        };\n        cacheManager.settings = this._settings.cache;\n    }\n}\n\nmodule.exports = new Statistical();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.js\n **/","'use strict';\n\nclass Interceptor {\n    constructor() {}\n\n    /**\n     * Create a proxy to wrap a class method and intercept each call.\n     *\n     * @param {object} object\n     * @param {object} cacheManager\n     */\n    cacheBefore(object, cacheManager, exclude) {\n        return new Proxy(object, {\n            get: (target, propKey) => {\n                if (propKey in target && !exclude.includes(propKey)) {\n                    return (...args) => {\n                        let res;\n                        if (cacheManager.settings.enabled) {\n                            const cache = cacheManager.find(propKey, args[0]);\n                            if (cache) return cache.result;\n\n                            res = target[propKey](...args);\n                            cacheManager.update(propKey, {dataSet: args[0], result: res});\n                        } else {\n                            res = target[propKey](...args);\n                        }\n\n                        return res;\n                    };\n                } else {\n                    return Reflect.get(target, propKey);\n                }\n            }\n        });\n    }\n}\n\nmodule.exports = new Interceptor();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/interceptor.js\n **/","'use strict';\n\nclass CacheManager {\n    constructor() {\n        this._cache = {};\n        this._settings = {\n            enabled: true,\n            rootElementCount: 10,\n            subElementCount: 30\n        };\n    }\n\n    /**\n     * Return CacheManager settings.\n     *\n     * @returns {{maxLength: number}|*}\n     */\n    get settings() {\n        return this._settings;\n    }\n\n    /**\n     * Return the entire cache\n     *\n     * @returns {{}|*}\n     */\n    get cache() {\n        return this._cache;\n    }\n\n    /**\n     * Update existing settings to manage cache.\n     *\n     * @param {*} options\n     */\n    set settings(options) {\n        if (!options) throw new Error('Missing parameter options (CacheManager:settings)');\n        this._settings = {\n            enabled: options.enabled,\n            rootElementCount: options.rootElementCount || 10,\n            subElementCount: options.subElementCount || 30\n        };\n    }\n\n    /**\n     * Update the cache saved with new results.\n     *\n     * @param {string} method\n     * @param {Object} options\n     */\n    update(method, options) {\n        if (Object.keys(this._cache).length >= this._settings.rootElementCount) delete this._cache[Object.keys(this._cache)[0]];\n        if (this._cache[method] && this._cache[method].length >= this._settings.subElementCount) this._cache[method].splice(0, 1);\n\n        this._cache[method] = this._cache[method] || [];\n        this._cache[method].push({\n            date: new Date().getTime(),\n            dataSet: options.dataSet,\n            result: options.result\n        });\n    }\n\n    /**\n     * Find an existing dataSet in the cache and return it.\n     *\n     * @param {String} method\n     * @param {Array} dataSet\n     * @returns {Object}\n     */\n    find(method, dataSet) {\n        const cache = this._cache[method] || [];\n\n        let res = null;\n        cache.some(v => {\n            if (v.dataSet === dataSet) {\n                res = v;\n                return true;\n            }\n\n            return false;\n        });\n\n        return res;\n    }\n\n    /**\n     * Reset the cache to be empty.\n     */\n    reset() {\n        this._cache = {};\n    }\n}\n\nmodule.exports = new CacheManager();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/cacheManager.js\n **/","'use strict';\n\nconst validator = require('./utils/validator');\nconst epsilon = require('./probability/epsilon');\nconst chiSquaredTable = require('./probability/chiSquaredTable');\n\nclass StatisticalMethod {\n    constructor() {\n        this._validator = validator;\n        this._chiSquaredProbTable = chiSquaredTable;\n        this._epsilon = epsilon;\n    }\n\n    /**\n     * Return table of chi squared prob.\n     *\n     * @returns {*}\n     */\n    get chiSquaredProbTable() {\n        return this._chiSquaredProbTable;\n    }\n\n    /**\n     * Return the smallest value of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    min(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return dataSet.sort((a, b) => a - b)[0];\n    }\n\n    /**\n     * Return the biggest value of the dataSet.\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    max(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return dataSet.sort((a, b) => a + b)[0];\n    }\n\n\n    /**\n     * The [Sum](https://en.wikipedia.org/wiki/Sum).\n     *\n     * @param dataSet\n     * @returns {*}\n     */\n    sum(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return dataSet.reduce((accumulator, current) => accumulator + current, 0);\n    }\n\n    /**\n     * The [Median](https://en.wikipedia.org/wiki/Median).\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    median(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        const middle = Math.floor(dataSet.length / 2);\n        const isEven = dataSet.length % 2 === 0;\n\n        dataSet = dataSet.sort((a, b) => a - b);\n\n        return isEven ? (dataSet[middle - 1] + dataSet[middle]) / 2 : dataSet[middle];\n    }\n\n    /**\n     * The [Mode](https://en.wikipedia.org/wiki/Mode).\n     *\n     * @param {Array} dataSet\n     * @returns {*}\n     */\n    mode(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        const counter = {};\n        let mode = [];\n        let max = 0;\n\n        dataSet.map((value, index) => {\n            if (!(dataSet[index] in counter)) counter[dataSet[index]] = 0;\n\n            counter[dataSet[index]]++;\n\n            if (counter[dataSet[index]] === max) mode.push(dataSet[index]);\n            if (counter[dataSet[index]] > max) {\n                max = counter[dataSet[index]];\n                mode = [dataSet[index]];\n            }\n        });\n\n        return mode.length > 1 ? mode : mode[0];\n    }\n\n    /**\n     * The [Mean](https://en.wikipedia.org/wiki/Mean).\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    mean(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        return this.sum(dataSet) / dataSet.length;\n    }\n\n    /**\n     * The [Variance](https://en.wikipedia.org/wiki/Variance).\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    variance(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        const avg = this.mean(dataSet);\n        const n = dataSet.length;\n\n        return this.sum(dataSet.map(value => Math.pow(value - avg, 2))) / n;\n    }\n\n    /**\n     * The [Standard Deviation](https://en.wikipedia.org/wiki/Standard_deviation).\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    stdDeviation(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return Math.sqrt(this.variance(dataSet));\n    }\n\n    /**\n     * The [Quantile](http://en.wikipedia.org/wiki/Quantile).\n     *\n     * @param {Array} dataSet\n     * @param {number} index\n     * @returns {Array}\n     */\n    quantile(dataSet, index = null) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        dataSet = dataSet.sort((a, b) => a - b);\n        return !index ?\n            [1, 2, 3, 4].map(i => dataSet[Math.ceil((dataSet.length * (i / 4))) - 1]) :\n            dataSet[Math.ceil((dataSet.length * (index / 4)) - 1)];\n    }\n\n    /**\n     * The [Percentile](https://en.wikipedia.org/wiki/Percentile).\n     *\n     * @param {Array} dataSet\n     * @param {number} index\n     * @returns {Array}\n     */\n    percentile(dataSet, index = null) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        dataSet = dataSet.sort((a, b) => a - b);\n        return !index ? Array.from({length: 99}, (v, k) => k + 1).map(i => dataSet[i]) : dataSet[Math.ceil((index / 100) * dataSet.length)];\n    }\n\n    /**\n     * Return the entire result of descriptives statistics above.\n     *\n     * @param {Array} dataSet\n     * @returns {{min: number, max: number, sum: *, median: number, mode: *, mean: number, variance: number, stdDeviation: number, quantile: Array}}\n     */\n    summary(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        return {\n            min: this.min(dataSet),\n            max: this.max(dataSet),\n            sum: this.sum(dataSet),\n            median: this.median(dataSet),\n            mode: this.mode(dataSet),\n            mean: this.mean(dataSet),\n            variance: this.variance(dataSet),\n            stdDeviation: this.stdDeviation(dataSet),\n            quantile: this.quantile(dataSet)\n        };\n    }\n\n    /**\n     * The [Factorial](https://en.wikipedia.org/wiki/Factorial).\n     *\n     * @param {number} n\n     * @returns {number}\n     */\n    factorial(n) {\n        this._validator.validate('n', n, ['isNumber', 'positive']);\n\n        let factorialResult = 1;\n        for (let i = 2; i <= n; i++) {\n            factorialResult *= i;\n        }\n\n        return factorialResult;\n    }\n\n    /**\n     * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean).\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    geometricMean(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return Math.pow(dataSet.reduce((accumulator, current) => accumulator * current, 1), 1 / dataSet.length);\n    }\n\n    /**\n     * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean).\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    harmonicMean(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        return dataSet.length / dataSet.reduce((accumulator, current) => accumulator + (1 / current), 0);\n    }\n\n    /**\n     * The [Variance](https://en.wikipedia.org/wiki/Harmonic_mean).\n     * The [Biais](https://fr.wikipedia.org/wiki/Estimateur_(statistique)#Biais).\n     *\n     * Non biased variance\n     *\n     * @param {Array} dataSet\n     * @returns {number}\n     */\n    sampleVariance(dataSet) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n\n        const avg = this.mean(dataSet);\n        const n = dataSet.length - 1;\n\n        return this.sum(dataSet.map(value => Math.pow(value - avg, 2))) / n;\n    }\n\n    /**\n     * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution).\n     *\n     * @param {number} trials\n     * @param {number} probability\n     * @returns {{}}\n     */\n    binomial(trials, probability) {\n        this._validator.validate('trials', trials, ['isNumber']);\n        this._validator.validate('probability', probability, ['isNumber', [0, 1]]);\n\n        let x = 0;\n        let cumulativeProbability = 0;\n        const cells = {};\n\n        do {\n            cells[x] = this.factorial(trials) / (this.factorial(x) * this.factorial(trials - x)) * (Math.pow(probability, x) * Math.pow(1 - probability, trials - x));\n            cumulativeProbability += cells[x];\n            x++;\n        } while (cumulativeProbability < 1 - this._epsilon);\n\n        return cells;\n    }\n\n    /**\n     * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution).\n     *\n     * @param {number} p\n     * @returns {Object}\n     */\n    bernoulli(p) {\n        this._validator.validate('p', p, ['isNumber', [0, 1]]);\n        return this.binomial(1, p);\n    }\n\n    /**\n     * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution).\n     *\n     * @param {number} lambda\n     * @returns {{}}\n     */\n    poisson(lambda) {\n        this._validator.validate('lambda', lambda, ['strictlyPositive']);\n\n        let x = 0;\n        let cumulativeProbability = 0;\n        let cells = {};\n\n        do {\n            cells[x] = (Math.pow(Math.E, -lambda) * Math.pow(lambda, x)) / this.factorial(x);\n            cumulativeProbability += cells[x];\n            x++;\n        } while (cumulativeProbability < 1 - this._epsilon);\n\n        return cells;\n    }\n\n    /**\n     * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test).\n     * return if data follow a specified distribution\n     *\n     * @param {Array} dataSet\n     * @param {Function} distributionType\n     * @param {number} significance\n     * @returns {boolean}\n     *\n     * @exemple\n     * chiSquaredGoodnessOfFit(dataSet, 'poisson', 0.05)); //= false\n     */\n    chiSquaredGoodnessOfFit(dataSet, distributionType, significance) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        this._validator.validate('distributionType', distributionType, ['isFunction']);\n        this._validator.validate('significance', significance, ['isNumber', 'positive']);\n\n        /* Generate an array with number of ocurences for each data in dataSet. */\n        let observedFrequencies = [];\n        observedFrequencies = dataSet.reduce((accumulator, val) => {\n            if (accumulator[val] === undefined) accumulator[val] = 0;\n            accumulator[val] += 1;\n            return accumulator;\n        }, []).filter(v => v !== undefined);\n\n        /* Number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test. */\n        /* Lose one degree of freedom for estimating `lambda` from the sample data. */\n        const dataSetMean = this.mean(dataSet);\n\n        /* The hypothesized distribution. Generate the hypothesized distribution. */\n        const hypothesizedDistribution = distributionType(dataSetMean);\n\n        /* Create an array holding a histogram of expected data given the */\n        /* sample size and hypothesized distribution. */\n        let expectedFrequencies = [];\n        expectedFrequencies = Object.entries(hypothesizedDistribution).reduce((accumulator, current, i) => {\n            if (observedFrequencies[i]) accumulator[i] = current[1] * dataSet.length;\n            return accumulator;\n        }, []);\n\n        /* Concat frequencies < 3 with the previous one */\n        expectedFrequencies = Object.entries(expectedFrequencies).reduceRight((previous, current) => {\n            if (previous[1] < 3) current[1] += previous[1];\n            return current;\n        });\n\n        /* Compute chiSquared value */\n        let chiSquared = 0;\n        chiSquared = Object.entries(observedFrequencies).reduce((accumulator, current, i) => {\n            accumulator += Math.pow((current[1] - expectedFrequencies[i]), 2) / expectedFrequencies[i];\n            return accumulator;\n        }, chiSquared);\n\n        const c = 1;\n        const degreesOfFreedom = Object.keys(observedFrequencies).length - c - 1;\n\n        return this._chiSquaredProbTable[degreesOfFreedom][significance] < chiSquared;\n    }\n\n    /**\n     * The [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test).\n     *\n     * @param {Array} dataSet\n     * @param {number} mu\n     * @returns {number}\n     */\n    tTestOneSample(dataSet, mu) {\n        this._validator.validate('dataSet', dataSet, ['isArray', 'length > 0']);\n        this._validator.validate('mu', mu, ['isNumber']);\n\n        const mean = this.mean(dataSet);\n        const sd = this.stdDeviation(dataSet);\n        const sqrtSampleSize = Math.sqrt(dataSet.length);\n\n        /* t-value */\n        return (mean - mu) / (sd / sqrtSampleSize);\n    }\n\n    /**\n     * The [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n     *\n     * @param {Array} dataSet1\n     * @param {Array} dataSet2\n     * @returns {number}\n     */\n    tTestTwoSample(dataSet1, dataSet2) {\n        this._validator.validate('dataSet1', dataSet1, ['isArray', 'length > 0']);\n        this._validator.validate('dataSet2', dataSet2, ['isArray', 'length > 0']);\n\n        const n = dataSet1.length;\n        const m = dataSet2.length;\n        const meanX = this.mean(dataSet1);\n        const meanY = this.mean(dataSet2);\n        const sampleVarianceX = this.sampleVariance(dataSet1);\n        const sampleVarianceY = this.sampleVariance(dataSet2);\n\n        const weightedVariance = (((n - 1) * sampleVarianceX) + ((m - 1) * sampleVarianceY)) / (n + m - 2);\n\n        /* t-value */\n        return (meanX - meanY) / Math.sqrt(weightedVariance * (1 / (n + 1) / m));\n    }\n}\n\nmodule.exports = StatisticalMethod;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/statistical.method.js\n **/","'use strict';\n\nclass Validator {\n    constructor() {}\n\n    /**\n     * Valid a value with rules given, if the rules are not respected throw an error.\n     *\n     * @param {string} parameterName\n     * @param {*} value\n     * @param {Array} ruless\n     */\n    validate(parameterName, value, rules) {\n        rules.map(r => {\n            switch (r) {\n                case 'isArray':\n                    if (!Array.isArray(value)) throw new Error(`Parameter ${parameterName} must be an array`);\n                    break;\n                case 'isNumber':\n                    if (typeof value !== 'number') throw new Error(`Parameter ${parameterName} must be a number`);\n                    break;\n                case 'isString':\n                    if (typeof value !== 'string') throw new Error(`Parameter ${parameterName} must be a string`);\n                    break;\n                case 'isFunction':\n                    if (typeof value !== 'function') throw new Error(`Parameter ${parameterName} must be a function`);\n                    break;\n                case 'length > 0':\n                    if (value.length === 0) throw new Error(`Parameter ${parameterName} must have more than 0 values`);\n                    break;\n                case 'positive':\n                    if (value < 0) throw new Error(`Parameter ${parameterName} must be positive`);\n                    break;\n                case 'strictlyPositive':\n                    if (value <= 0) throw new Error(`Parameter ${parameterName} must be strictly positive`);\n                    break;\n                default:\n                    if (Array.isArray(r)) {\n                        const hasOnlyNumbers = !(r.map(v => !isNaN(v)).includes(false));\n                        if (hasOnlyNumbers) {\n                            if (r.length === 2) {\n                                if (value < r[0] || value > r[1]) throw new Error(`Parameter ${parameterName} must fall between ${r[0]} and ${r[1]}`);\n                            }\n                        }\n                    } else {\n                        throw new Error('Method not implemented : ' + r);\n                    }\n            }\n        });\n    }\n}\n\nmodule.exports = new Validator();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/validator.js\n **/","/**\n * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n * until we're \"close enough\". Epsilon is a very small number: for\n * simple statistics, that number is **0.0001**\n *\n * This is used in calculations like the binomialDistribution, in which\n * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n * it progresses until it is close enough.\n *\n * @type {number}\n */\nconst epsilon = 0.0001;\n\nmodule.exports = epsilon;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/probability/epsilon.js\n **/","'use strict';\n\n/**\n * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution)\n *\n * @type {*}\n */\nconst chiSquaredTable = {\n    '1': {\n        '0.995': 0,\n        '0.99': 0,\n        '0.975': 0,\n        '0.95': 0,\n        '0.9': 0.02,\n        '0.5': 0.45,\n        '0.1': 2.71,\n        '0.05': 3.84,\n        '0.025': 5.02,\n        '0.01': 6.63,\n        '0.005': 7.88\n    },\n    '2': {\n        '0.995': 0.01,\n        '0.99': 0.02,\n        '0.975': 0.05,\n        '0.95': 0.1,\n        '0.9': 0.21,\n        '0.5': 1.39,\n        '0.1': 4.61,\n        '0.05': 5.99,\n        '0.025': 7.38,\n        '0.01': 9.21,\n        '0.005': 10.6\n    },\n    '3': {\n        '0.995': 0.07,\n        '0.99': 0.11,\n        '0.975': 0.22,\n        '0.95': 0.35,\n        '0.9': 0.58,\n        '0.5': 2.37,\n        '0.1': 6.25,\n        '0.05': 7.81,\n        '0.025': 9.35,\n        '0.01': 11.34,\n        '0.005': 12.84\n    },\n    '4': {\n        '0.995': 0.21,\n        '0.99': 0.3,\n        '0.975': 0.48,\n        '0.95': 0.71,\n        '0.9': 1.06,\n        '0.5': 3.36,\n        '0.1': 7.78,\n        '0.05': 9.49,\n        '0.025': 11.14,\n        '0.01': 13.28,\n        '0.005': 14.86\n    },\n    '5': {\n        '0.995': 0.41,\n        '0.99': 0.55,\n        '0.975': 0.83,\n        '0.95': 1.15,\n        '0.9': 1.61,\n        '0.5': 4.35,\n        '0.1': 9.24,\n        '0.05': 11.07,\n        '0.025': 12.83,\n        '0.01': 15.09,\n        '0.005': 16.75\n    },\n    '6': {\n        '0.995': 0.68,\n        '0.99': 0.87,\n        '0.975': 1.24,\n        '0.95': 1.64,\n        '0.9': 2.2,\n        '0.5': 5.35,\n        '0.1': 10.65,\n        '0.05': 12.59,\n        '0.025': 14.45,\n        '0.01': 16.81,\n        '0.005': 18.55\n    },\n    '7': {\n        '0.995': 0.99,\n        '0.99': 1.25,\n        '0.975': 1.69,\n        '0.95': 2.17,\n        '0.9': 2.83,\n        '0.5': 6.35,\n        '0.1': 12.02,\n        '0.05': 14.07,\n        '0.025': 16.01,\n        '0.01': 18.48,\n        '0.005': 20.28\n    },\n    '8': {\n        '0.995': 1.34,\n        '0.99': 1.65,\n        '0.975': 2.18,\n        '0.95': 2.73,\n        '0.9': 3.49,\n        '0.5': 7.34,\n        '0.1': 13.36,\n        '0.05': 15.51,\n        '0.025': 17.53,\n        '0.01': 20.09,\n        '0.005': 21.96\n    },\n    '9': {\n        '0.995': 1.73,\n        '0.99': 2.09,\n        '0.975': 2.7,\n        '0.95': 3.33,\n        '0.9': 4.17,\n        '0.5': 8.34,\n        '0.1': 14.68,\n        '0.05': 16.92,\n        '0.025': 19.02,\n        '0.01': 21.67,\n        '0.005': 23.59\n    },\n    '10': {\n        '0.995': 2.16,\n        '0.99': 2.56,\n        '0.975': 3.25,\n        '0.95': 3.94,\n        '0.9': 4.87,\n        '0.5': 9.34,\n        '0.1': 15.99,\n        '0.05': 18.31,\n        '0.025': 20.48,\n        '0.01': 23.21,\n        '0.005': 25.19\n    },\n    '11': {\n        '0.995': 2.6,\n        '0.99': 3.05,\n        '0.975': 3.82,\n        '0.95': 4.57,\n        '0.9': 5.58,\n        '0.5': 10.34,\n        '0.1': 17.28,\n        '0.05': 19.68,\n        '0.025': 21.92,\n        '0.01': 24.72,\n        '0.005': 26.76\n    },\n    '12': {\n        '0.995': 3.07,\n        '0.99': 3.57,\n        '0.975': 4.4,\n        '0.95': 5.23,\n        '0.9': 6.3,\n        '0.5': 11.34,\n        '0.1': 18.55,\n        '0.05': 21.03,\n        '0.025': 23.34,\n        '0.01': 26.22,\n        '0.005': 28.3\n    },\n    '13': {\n        '0.995': 3.57,\n        '0.99': 4.11,\n        '0.975': 5.01,\n        '0.95': 5.89,\n        '0.9': 7.04,\n        '0.5': 12.34,\n        '0.1': 19.81,\n        '0.05': 22.36,\n        '0.025': 24.74,\n        '0.01': 27.69,\n        '0.005': 29.82\n    },\n    '14': {\n        '0.995': 4.07,\n        '0.99': 4.66,\n        '0.975': 5.63,\n        '0.95': 6.57,\n        '0.9': 7.79,\n        '0.5': 13.34,\n        '0.1': 21.06,\n        '0.05': 23.68,\n        '0.025': 26.12,\n        '0.01': 29.14,\n        '0.005': 31.32\n    },\n    '15': {\n        '0.995': 4.6,\n        '0.99': 5.23,\n        '0.975': 6.27,\n        '0.95': 7.26,\n        '0.9': 8.55,\n        '0.5': 14.34,\n        '0.1': 22.31,\n        '0.05': 25,\n        '0.025': 27.49,\n        '0.01': 30.58,\n        '0.005': 32.8\n    },\n    '16': {\n        '0.995': 5.14,\n        '0.99': 5.81,\n        '0.975': 6.91,\n        '0.95': 7.96,\n        '0.9': 9.31,\n        '0.5': 15.34,\n        '0.1': 23.54,\n        '0.05': 26.3,\n        '0.025': 28.85,\n        '0.01': 32,\n        '0.005': 34.27\n    },\n    '17': {\n        '0.995': 5.7,\n        '0.99': 6.41,\n        '0.975': 7.56,\n        '0.95': 8.67,\n        '0.9': 10.09,\n        '0.5': 16.34,\n        '0.1': 24.77,\n        '0.05': 27.59,\n        '0.025': 30.19,\n        '0.01': 33.41,\n        '0.005': 35.72\n    },\n    '18': {\n        '0.995': 6.26,\n        '0.99': 7.01,\n        '0.975': 8.23,\n        '0.95': 9.39,\n        '0.9': 10.87,\n        '0.5': 17.34,\n        '0.1': 25.99,\n        '0.05': 28.87,\n        '0.025': 31.53,\n        '0.01': 34.81,\n        '0.005': 37.16\n    },\n    '19': {\n        '0.995': 6.84,\n        '0.99': 7.63,\n        '0.975': 8.91,\n        '0.95': 10.12,\n        '0.9': 11.65,\n        '0.5': 18.34,\n        '0.1': 27.2,\n        '0.05': 30.14,\n        '0.025': 32.85,\n        '0.01': 36.19,\n        '0.005': 38.58\n    },\n    '20': {\n        '0.995': 7.43,\n        '0.99': 8.26,\n        '0.975': 9.59,\n        '0.95': 10.85,\n        '0.9': 12.44,\n        '0.5': 19.34,\n        '0.1': 28.41,\n        '0.05': 31.41,\n        '0.025': 34.17,\n        '0.01': 37.57,\n        '0.005': 40\n    },\n    '21': {\n        '0.995': 8.03,\n        '0.99': 8.9,\n        '0.975': 10.28,\n        '0.95': 11.59,\n        '0.9': 13.24,\n        '0.5': 20.34,\n        '0.1': 29.62,\n        '0.05': 32.67,\n        '0.025': 35.48,\n        '0.01': 38.93,\n        '0.005': 41.4\n    },\n    '22': {\n        '0.995': 8.64,\n        '0.99': 9.54,\n        '0.975': 10.98,\n        '0.95': 12.34,\n        '0.9': 14.04,\n        '0.5': 21.34,\n        '0.1': 30.81,\n        '0.05': 33.92,\n        '0.025': 36.78,\n        '0.01': 40.29,\n        '0.005': 42.8\n    },\n    '23': {\n        '0.995': 9.26,\n        '0.99': 10.2,\n        '0.975': 11.69,\n        '0.95': 13.09,\n        '0.9': 14.85,\n        '0.5': 22.34,\n        '0.1': 32.01,\n        '0.05': 35.17,\n        '0.025': 38.08,\n        '0.01': 41.64,\n        '0.005': 44.18\n    },\n    '24': {\n        '0.995': 9.89,\n        '0.99': 10.86,\n        '0.975': 12.4,\n        '0.95': 13.85,\n        '0.9': 15.66,\n        '0.5': 23.34,\n        '0.1': 33.2,\n        '0.05': 36.42,\n        '0.025': 39.36,\n        '0.01': 42.98,\n        '0.005': 45.56\n    },\n    '25': {\n        '0.995': 10.52,\n        '0.99': 11.52,\n        '0.975': 13.12,\n        '0.95': 14.61,\n        '0.9': 16.47,\n        '0.5': 24.34,\n        '0.1': 34.28,\n        '0.05': 37.65,\n        '0.025': 40.65,\n        '0.01': 44.31,\n        '0.005': 46.93\n    },\n    '26': {\n        '0.995': 11.16,\n        '0.99': 12.2,\n        '0.975': 13.84,\n        '0.95': 15.38,\n        '0.9': 17.29,\n        '0.5': 25.34,\n        '0.1': 35.56,\n        '0.05': 38.89,\n        '0.025': 41.92,\n        '0.01': 45.64,\n        '0.005': 48.29\n    },\n    '27': {\n        '0.995': 11.81,\n        '0.99': 12.88,\n        '0.975': 14.57,\n        '0.95': 16.15,\n        '0.9': 18.11,\n        '0.5': 26.34,\n        '0.1': 36.74,\n        '0.05': 40.11,\n        '0.025': 43.19,\n        '0.01': 46.96,\n        '0.005': 49.65\n    },\n    '28': {\n        '0.995': 12.46,\n        '0.99': 13.57,\n        '0.975': 15.31,\n        '0.95': 16.93,\n        '0.9': 18.94,\n        '0.5': 27.34,\n        '0.1': 37.92,\n        '0.05': 41.34,\n        '0.025': 44.46,\n        '0.01': 48.28,\n        '0.005': 50.99\n    },\n    '29': {\n        '0.995': 13.12,\n        '0.99': 14.26,\n        '0.975': 16.05,\n        '0.95': 17.71,\n        '0.9': 19.77,\n        '0.5': 28.34,\n        '0.1': 39.09,\n        '0.05': 42.56,\n        '0.025': 45.72,\n        '0.01': 49.59,\n        '0.005': 52.34\n    },\n    '30': {\n        '0.995': 13.79,\n        '0.99': 14.95,\n        '0.975': 16.79,\n        '0.95': 18.49,\n        '0.9': 20.6,\n        '0.5': 29.34,\n        '0.1': 40.26,\n        '0.05': 43.77,\n        '0.025': 46.98,\n        '0.01': 50.89,\n        '0.005': 53.67\n    },\n    '40': {\n        '0.995': 20.71,\n        '0.99': 22.16,\n        '0.975': 24.43,\n        '0.95': 26.51,\n        '0.9': 29.05,\n        '0.5': 39.34,\n        '0.1': 51.81,\n        '0.05': 55.76,\n        '0.025': 59.34,\n        '0.01': 63.69,\n        '0.005': 66.77\n    },\n    '50': {\n        '0.995': 27.99,\n        '0.99': 29.71,\n        '0.975': 32.36,\n        '0.95': 34.76,\n        '0.9': 37.69,\n        '0.5': 49.33,\n        '0.1': 63.17,\n        '0.05': 67.5,\n        '0.025': 71.42,\n        '0.01': 76.15,\n        '0.005': 79.49\n    },\n    '60': {\n        '0.995': 35.53,\n        '0.99': 37.48,\n        '0.975': 40.48,\n        '0.95': 43.19,\n        '0.9': 46.46,\n        '0.5': 59.33,\n        '0.1': 74.4,\n        '0.05': 79.08,\n        '0.025': 83.3,\n        '0.01': 88.38,\n        '0.005': 91.95\n    },\n    '70': {\n        '0.995': 43.28,\n        '0.99': 45.44,\n        '0.975': 48.76,\n        '0.95': 51.74,\n        '0.9': 55.33,\n        '0.5': 69.33,\n        '0.1': 85.53,\n        '0.05': 90.53,\n        '0.025': 95.02,\n        '0.01': 100.42,\n        '0.005': 104.22\n    },\n    '80': {\n        '0.995': 51.17,\n        '0.99': 53.54,\n        '0.975': 57.15,\n        '0.95': 60.39,\n        '0.9': 64.28,\n        '0.5': 79.33,\n        '0.1': 96.58,\n        '0.05': 101.88,\n        '0.025': 106.63,\n        '0.01': 112.33,\n        '0.005': 116.32\n    },\n    '90': {\n        '0.995': 59.2,\n        '0.99': 61.75,\n        '0.975': 65.65,\n        '0.95': 69.13,\n        '0.9': 73.29,\n        '0.5': 89.33,\n        '0.1': 107.57,\n        '0.05': 113.14,\n        '0.025': 118.14,\n        '0.01': 124.12,\n        '0.005': 128.3\n    },\n    '100': {\n        '0.995': 67.33,\n        '0.99': 70.06,\n        '0.975': 74.22,\n        '0.95': 77.93,\n        '0.9': 82.36,\n        '0.5': 99.33,\n        '0.1': 118.5,\n        '0.05': 124.34,\n        '0.025': 129.56,\n        '0.01': 135.81,\n        '0.005': 140.17\n    }\n};\n\nmodule.exports = chiSquaredTable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/probability/chiSquaredTable.js\n **/"],"sourceRoot":""}